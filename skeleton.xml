<?xml version="1.0" encoding="UTF-8"?>
<skeleton date="2021-07-07T17:09:58.320706200Z"
          schema="xsd/skeleton.xsd"
          version="1.0-SNAPSHOT">
   <app id="D:\Projects\HuaweiLab\jpeek\..\dl4j-examples\target\classes">
      <package id="org.deeplearning4j.examples.advanced.modelling.styletransfer">
         <class id="NeuralStyleTransfer"><!--Package: org.deeplearning4j.examples.advanced.modelling.styletransfer; name: org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer; file: org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="[Ljava/lang/String">ALL_LAYERS</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="[Ljava/lang/String">STYLE_LAYERS</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">CONTENT_LAYER_NAME</attribute>
               <attribute final="true" public="false" static="true" type="D">BETA_MOMENTUM</attribute>
               <attribute final="true" public="false" static="true" type="D">BETA2_MOMENTUM</attribute>
               <attribute final="true" public="false" static="true" type="D">EPSILON</attribute>
               <attribute final="true" public="false" static="true" type="D">ALPHA</attribute>
               <attribute final="true" public="false" static="true" type="D">BETA</attribute>
               <attribute final="true" public="false" static="true" type="D">LEARNING_RATE</attribute>
               <attribute final="true" public="false" static="true" type="D">NOISE_RATION</attribute>
               <attribute final="true" public="false" static="true" type="I">ITERATIONS</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">CONTENT_FILE</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">STYLE_FILE</attribute>
               <attribute final="true" public="false" static="true" type="I">SAVE_IMAGE_CHECKPOINT</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">OUTPUT_PATH</attribute>
               <attribute final="true" public="false" static="true" type="I">HEIGHT</attribute>
               <attribute final="true" public="false" static="true" type="I">WIDTH</attribute>
               <attribute final="true" public="false" static="true" type="I">CHANNELS</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization">IMAGE_PRE_PROCESSOR</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/datavec/image/loader/NativeImageLoader">LOADER</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.STYLETRANSFER</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.dataLocalPath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.transferStyle</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="transferStyle"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.loadModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.loadImage</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.loadImage</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.createCombinationImage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.feedForward</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.feedForward</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.buildStyleGramValues</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.createADAMUpdater</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.feedForward</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.backPropagateStyles</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Ljava/util/HashMap">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.backPropagateContent</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.addi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.AdamUpdater.applyUpdater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.subi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.totalLoss</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.saveImage</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;Ljava/util/HashMap;Ljava/util/Map;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="backPropagateStyles"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Ljava/util/HashMap">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.STYLE_LAYERS</op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.parseDouble</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.findLayerIndex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.derivativeLossStyleInLayer</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.backPropagate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.addi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;Ljava/util/Map;Ljava/util/Map;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="backPropagateContent"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.derivativeLossContentInLayer</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.findLayerIndex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.backPropagate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/learning/AdamUpdater;"
                       name="createADAMUpdater"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Lorg/nd4j/linalg/learning/AdamUpdater</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="DDDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.AdamUpdater.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/Adam">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.AdamUpdater.setStateViewArray</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[JCZ">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="createCombinationImage"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.LOADER</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.asMatrix</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.IMAGE_PRE_PROCESSOR</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.createCombineImageWithRandomPixels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.addi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="createCombineImageWithRandomPixels"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>java.util.concurrent.ThreadLocalRandom.current</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.ThreadLocalRandom.nextDouble</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="loadImage"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.LOADER</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.asMatrix</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.IMAGE_PRE_PROCESSOR</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Map;)Ljava/util/HashMap;"
                       name="buildStyleGramValues"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>Ljava/util/HashMap</return>
                  <ops>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.STYLE_LAYERS</op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.gramMatrix</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)I"
                       name="findLayerIndex"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ALL_LAYERS</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ALL_LAYERS</op>
                     <op code="call">
                        <name>java.lang.String.equalsIgnoreCase</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)D"
                       name="totalLoss"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Map">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.allStyleLayersLoss</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.contentLoss</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Double;"
                       name="allStyleLayersLoss"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Map">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>Ljava/lang/Double</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.STYLE_LAYERS</op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.parseDouble</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.styleLoss</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)D"
                       name="contentLoss"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.sumOfSquaredErrors</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)D"
                       name="styleLoss"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.gramMatrix</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.gramMatrix</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.sumOfSquaredErrors</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;Lorg/nd4j/linalg/api/ndarray/INDArray;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="backPropagate"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ALL_LAYERS</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.conf</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.Layer.setIDropout</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/dropout/IDropout">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.backpropGradient</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)D"
                       name="sumOfSquaredErrors"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.pow</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sumNumber</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Number.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="derivativeLossContentInLayer"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ensurePositive</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.flatten</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="gramMatrix"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.flatten</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mmul</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="flatten"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="derivativeLossStyleInLayer"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.gramMatrix</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.flatten</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mmul</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ensurePositive</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="ensurePositive"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Float.valueOf</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.conditions.Conditions.lessThan</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.BooleanIndexing.replaceWhere</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/Number">?</arg>
                           <arg type="Lorg/nd4j/linalg/indexing/conditions/Condition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Float.valueOf</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Float.valueOf</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.conditions.Conditions.greaterThan</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.BooleanIndexing.replaceWhere</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/Number">?</arg>
                           <arg type="Lorg/nd4j/linalg/indexing/conditions/Condition">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/graph/ComputationGraph;"
                       name="loadModel"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/graph/ComputationGraph</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16$VGG16Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.zoo.PretrainedType.IMAGENET</op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.ZooModel.initPretrained</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/zoo/PretrainedType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.initGradientsView</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;I)V"
                       name="saveImage"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.IMAGE_PRE_PROCESSOR</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.revertFeatures</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.imageFromINDArray</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.imageio.ImageIO.write</name>
                        <args>
                           <arg type="Ljava/awt/image/RenderedImage">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Ljava/awt/image/BufferedImage;"
                       name="imageFromINDArray"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Ljava/awt/image/BufferedImage</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.Color.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.Color.getRGB</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.setRGB</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.log</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.ALL_LAYERS</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.STYLE_LAYERS</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.VGG16ImagePreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.IMAGE_PRE_PROCESSOR</op>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.styletransfer.NeuralStyleTransfer.LOADER</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.presavingdatasets">
         <class id="PreSaveFirst"><!--Package: org.deeplearning4j.examples.quickstart.features.presavingdatasets; name: org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst; file: org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">TRAIN_FOLDER</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">TEST_FOLDER</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TRAIN_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TEST_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TRAIN_FOLDER</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TEST_FOLDER</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="LoadPreSavedLenetMnistExample"><!--Package: org.deeplearning4j.examples.quickstart.features.presavingdatasets; name: org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample; file: org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TRAIN_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TEST_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TRAIN_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.ExistingMiniBatchDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.AsyncDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.PreSaveFirst.TEST_FOLDER</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.ExistingMiniBatchDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.AsyncDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.presavingdatasets.LoadPreSavedLenetMnistExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.feedforward.regression">
         <class id="ImageDrawer$FastRGB"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer$FastRGB; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer$FastRGB-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">width</attribute>
               <attribute final="false" public="false" static="false" type="I">height</attribute>
               <attribute final="false" public="false" static="false" type="Z">hasAlphaChannel</attribute>
               <attribute final="false" public="false" static="false" type="I">pixelLength</attribute>
               <attribute final="false" public="false" static="false" type="[B">pixels</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/ImageDrawer">this$0</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/ImageDrawer;Ljava/awt/image/BufferedImage;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/ImageDrawer">?</arg>
                     <arg type="Ljava/awt/image/BufferedImage">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">this$0</op>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getRaster</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.WritableRaster.getDataBuffer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.DataBufferByte.getData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">pixels</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">width</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">height</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getAlphaRaster</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">hasAlphaChannel</op>
                     <op code="put">pixelLength</op>
                     <op code="get">hasAlphaChannel</op>
                     <op code="put">pixelLength</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)[S"
                       name="getRGB"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>S</return>
                  <ops>
                     <op code="get">pixelLength</op>
                     <op code="get">width</op>
                     <op code="get">pixelLength</op>
                     <op code="get">hasAlphaChannel</op>
                     <op code="get">pixels</op>
                     <op code="get">pixels</op>
                     <op code="get">pixels</op>
                     <op code="get">pixels</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="SumModel"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel-->
            <attributes>
               <attribute final="true" public="true" static="true" type="I">seed</attribute>
               <attribute final="true" public="true" static="true" type="I">nEpochs</attribute>
               <attribute final="true" public="false" static="true" type="I">nSamples</attribute>
               <attribute final="true" public="true" static="true" type="I">batchSize</attribute>
               <attribute final="true" public="true" static="true" type="D">learningRate</attribute>
               <attribute final="false" public="false" static="true" type="I">MIN_RANGE</attribute>
               <attribute final="false" public="false" static="true" type="I">MAX_RANGE</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/util/Random">rng</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.rng</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.getTrainingData</name>
                        <args>
                           <arg type="ILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ILjava/util/Random;)Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="getTrainingData"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MIN_RANGE</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MAX_RANGE</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MIN_RANGE</op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MIN_RANGE</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MAX_RANGE</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MIN_RANGE</op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.hstack</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.asList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.rng</op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.ListDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MIN_RANGE</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.MAX_RANGE</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.rng</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CSVDataModel"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.DATAEXAMPLES</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.readCSVDataset</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.plotDataset</name>
                        <args>
                           <arg type="Ljava/util/ArrayList">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.fitStraightline</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler.getMin</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerMinMaxScaler.getMax</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.linspace</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.plotDataset</name>
                        <args>
                           <arg type="Ljava/util/ArrayList">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/DataSet;)Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="fitStraightline"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="readCSVDataset"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="IIIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/ArrayList;)V"
                       name="plotDataset"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/ArrayList">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.add</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeries">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.chart.plot.PlotOrientation.VERTICAL</op>
                     <op code="call">
                        <name>org.jfree.chart.ChartFactory.createScatterPlot</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/jfree/data/xy/XYDataset">?</arg>
                           <arg type="Lorg/jfree/chart/plot/PlotOrientation">?</arg>
                           <arg type="ZZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.CSVDataModel.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MathFunctionsModel"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
               <attribute final="true" public="true" static="true" type="I">seed</attribute>
               <attribute final="true" public="true" static="true" type="I">nEpochs</attribute>
               <attribute final="true" public="false" static="true" type="I">plotFrequency</attribute>
               <attribute final="true" public="false" static="true" type="I">nSamples</attribute>
               <attribute final="true" public="true" static="true" type="I">batchSize</attribute>
               <attribute final="true" public="true" static="true" type="D">learningRate</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/util/Random">rng</attribute>
               <attribute final="true" public="true" static="true" type="I">numInputs</attribute>
               <attribute final="true" public="false" static="true" type="I">numOutputs</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SinXDivXMathFunction.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.getDeepDenseLayerNetworkConfiguration</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.linspace</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.rng</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.getTrainingData</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction">?</arg>
                           <arg type="ILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.MathFunction.getFunctionValues</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.plot</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration;"
                       name="getDeepDenseLayerNetworkConfiguration"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction;ILjava/util/Random;)Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="getTrainingData"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.MathFunction.getFunctionValues</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.asList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.ListDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;[Lorg/nd4j/linalg/api/ndarray/INDArray;)V"
                       name="plot"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/mathfunctions/MathFunction">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeriesCollection">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeriesCollection">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.MathFunction.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.MathFunction.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.chart.plot.PlotOrientation.VERTICAL</op>
                     <op code="call">
                        <name>org.jfree.chart.ChartFactory.createXYLineChart</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/jfree/data/xy/XYDataset">?</arg>
                           <arg type="Lorg/jfree/chart/plot/PlotOrientation">?</arg>
                           <arg type="ZZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/jfree/data/xy/XYSeriesCollection;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Ljava/lang/String;)V"
                       name="addSeries"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/jfree/data/xy/XYSeriesCollection">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.add</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeries">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.visualize</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.MathFunctionsModel.rng</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ImageDrawer"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JFrame">mainFrame</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">nn</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/awt/image/BufferedImage">originalImage</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JLabel">generatedLabel</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/api/ndarray/INDArray">xyOut</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/datavec/image/loader/Java2DNativeImageLoader">j2dNil</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/ImageDrawer$FastRGB">rgb</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Random">random</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="init"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">mainFrame</op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.DATAEXAMPLES</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.imageio.ImageIO.read</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put">originalImage</op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getType</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/Icon">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/Icon">?</arg>
                        </args>
                     </op>
                     <op code="put">generatedLabel</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">generatedLabel</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="get">generatedLabel</op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.setSize</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.Java2DNativeImageLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">j2dNil</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">random</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.createNN</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">nn</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.calcGrid</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">xyOut</op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer$FastRGB.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/feedforward/regression/ImageDrawer">?</arg>
                           <arg type="Ljava/awt/image/BufferedImage">?</arg>
                        </args>
                     </op>
                     <op code="put">rgb</op>
                     <op code="call">
                        <name>javax.swing.SwingUtilities.invokeLater</name>
                        <args>
                           <arg type="Ljava/lang/Runnable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="createNN"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.L2</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="onCalc"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.generateDataSet</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">nn</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.ImageDrawer.drawImage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.invalidate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">mainFrame</op>
                     <op code="call">
                        <name>javax.swing.JFrame.repaint</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.SwingUtilities.invokeLater</name>
                        <args>
                           <arg type="Ljava/lang/Runnable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="generateDataSet"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">random</op>
                     <op code="call">
                        <name>java.util.Random.ints</name>
                        <args>
                           <arg type="JII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.boxed</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">random</op>
                     <op code="call">
                        <name>java.util.Random.ints</name>
                        <args>
                           <arg type="JII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.boxed</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.shade.guava.collect.Streams.forEachPair</name>
                        <args>
                           <arg type="Ljava/util/stream/Stream">?</arg>
                           <arg type="Ljava/util/stream/Stream">?</arg>
                           <arg type="Ljava/util/function/BiConsumer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.divi</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="drawImage"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">nn</op>
                     <op code="get">xyOut</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.conditions.Conditions.lessThan</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.BooleanIndexing.replaceWhere</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/Number">?</arg>
                           <arg type="Lorg/nd4j/linalg/indexing/conditions/Condition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.conditions.Conditions.greaterThan</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.BooleanIndexing.replaceWhere</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/lang/Number">?</arg>
                           <arg type="Lorg/nd4j/linalg/indexing/conditions/Condition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mul</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.INT8</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.castTo</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getColumn</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getColumn</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getColumn</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.vstack</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="get">j2dNil</op>
                     <op code="call">
                        <name>org.datavec.image.loader.Java2DNativeImageLoader.asBufferedImage</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">generatedLabel</op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.setIcon</name>
                        <args>
                           <arg type="Ljavax/swing/Icon">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="calcGrid"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getWidth</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">originalImage</op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getHeight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.linspace</name>
                        <args>
                           <arg type="DDJLorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.linspace</name>
                        <args>
                           <arg type="DDJLorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.meshgrid</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.ravel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.ravel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.vstack</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext">
         <class id="GenerateTxtModel"><!--Package: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext; name: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel; file: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel.getShakespeareIterator</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.BackpropType.TruncatedBPTT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.backpropType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/BackpropType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTForwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTBackwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel.sampleCharactersFromNetwork</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;"
                       name="getShakespeareIterator"
                       static="true"
                       visibility="default">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.copyURLToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.getMinimalCharacterSet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.nio.charset.StandardCharsets.UTF_8</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                           <arg type="II[CLjava/util/Random">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;Ljava/util/Random;II)[Ljava/lang/String;"
                       name="sampleCharactersFromNetwork"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.getRandomCharacter</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertCharacterToIndex</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.tensorAlongDimension</name>
                        <args>
                           <arg type="J[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.cumsum</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.conditions.Conditions.greaterThan</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.BooleanIndexing.firstIndex</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/indexing/conditions/Condition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertIndexToCharacter</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([DLjava/util/Random;)I"
                       name="sampleFromDistribution"
                       static="true"
                       visibility="default">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalArgumentException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="GenerateTxtCharCompGraphModel"><!--Package: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext; name: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtCharCompGraphModel; file: org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtCharCompGraphModel-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel.getShakespeareIterator</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.BackpropType.TruncatedBPTT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.backpropType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/BackpropType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.tBPTTForwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.tBPTTBackwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getNumLayers</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getLayer</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtCharCompGraphModel.sampleCharactersFromNetwork</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Lorg/deeplearning4j/nn/graph/ComputationGraph;Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;Ljava/util/Random;II)[Ljava/lang/String;"
                       name="sampleCharactersFromNetwork"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.getRandomCharacter</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertCharacterToIndex</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.rnnTimeStep</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.tensorAlongDimension</name>
                        <args>
                           <arg type="J[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.generatetext.GenerateTxtModel.sampleFromDistribution</name>
                        <args>
                           <arg type="[DLjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertIndexToCharacter</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.rnnTimeStep</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.advanced.modelling.detectgender">
         <class id="PredictGenderTest"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.detectgender; name: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTest; file: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTest-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">row</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JDialog">jd</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JTextField">jtf</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JLabel">jlbl</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">possibleCharacters</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JLabel">gender</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">filePath</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JButton">btnNext</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JLabel">genderLabel</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">model</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">row</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTest.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Thread.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Runnable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Thread.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTest.prepareInterface</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="prepareInterface"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.JDialog.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">jd</op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.getContentPane</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.Container.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.setLocationRelativeTo</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">jlbl</op>
                     <op code="get">jlbl</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">jlbl</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="get">jlbl</op>
                     <op code="call">
                        <name>javax.swing.JDialog.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JTextField.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">jtf</op>
                     <op code="get">jtf</op>
                     <op code="call">
                        <name>javax.swing.JTextField.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="get">jtf</op>
                     <op code="call">
                        <name>javax.swing.JDialog.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">genderLabel</op>
                     <op code="get">genderLabel</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">genderLabel</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="get">genderLabel</op>
                     <op code="call">
                        <name>javax.swing.JDialog.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">gender</op>
                     <op code="get">gender</op>
                     <op code="call">
                        <name>javax.swing.JLabel.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="get">gender</op>
                     <op code="call">
                        <name>javax.swing.JDialog.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JButton.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">btnNext</op>
                     <op code="get">btnNext</op>
                     <op code="call">
                        <name>javax.swing.JButton.setBounds</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">btnNext</op>
                     <op code="call">
                        <name>javax.swing.JButton.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">btnNext</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTest$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/detectgender/PredictGenderTest">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JButton.addActionListener</name>
                        <args>
                           <arg type="Ljava/awt/event/ActionListener">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="get">btnNext</op>
                     <op code="call">
                        <name>javax.swing.JDialog.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get">jd</op>
                     <op code="call">
                        <name>javax.swing.JDialog.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="run"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.PREDICTGENDERDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">filePath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="put">model</op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="PredictGenderTrain"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.detectgender; name: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain; file: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain-->
            <attributes>
               <attribute final="false"
                          public="true"
                          static="false"
                          type="Ljava/lang/String">filePath</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.PREDICTGENDERDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain.dataLocalPath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">filePath</op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain.train</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="train"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/detectgender/PredictGenderTrain">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.maxLengthName</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.PredictGenderTrain$2.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/detectgender/PredictGenderTrain">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.biasInit</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="GenderRecordReader"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.detectgender; name: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader; file: org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">labels</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">names</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">possibleCharacters</attribute>
               <attribute final="false" public="true" static="true" type="I">maxLengthName</attribute>
               <attribute final="false" public="false" static="false" type="I">totalRecords</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Iterator">iter</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/util/List;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.LineRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">names</op>
                     <op code="put">totalRecords</op>
                     <op code="put">labels</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalRecords"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">totalRecords</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/datavec/api/split/InputSplit;)V"
                       name="initialize"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.split.InputSplit.locations</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/net/URI">?</arg>
                        </args>
                     </op>
                     <op code="get">labels</op>
                     <op code="call">
                        <name>java.util.List.stream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.filter</name>
                        <args>
                           <arg type="Ljava/util/function/Predicate">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Collectors.toList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.collect</name>
                        <args>
                           <arg type="Ljava/util/stream/Collector">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.nio.file.Paths.get</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.nio.charset.Charset.defaultCharset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.nio.file.Files.readAllLines</name>
                        <args>
                           <arg type="Ljava/nio/file/Path">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.stream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.map</name>
                        <args>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Collectors.toList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.collect</name>
                        <args>
                           <arg type="Ljava/util/stream/Collector">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.InterruptedException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.abs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.subList</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.clear</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.stream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.map</name>
                        <args>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Collectors.toList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.collect</name>
                        <args>
                           <arg type="Ljava/util/stream/Collector">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.clear</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">names</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.addAll</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.clear</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">names</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">totalRecords</op>
                     <op code="get">names</op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get">names</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iter</op>
                     <op code="call">
                        <name>java.lang.InterruptedException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.InterruptedException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.parseDouble</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.writable.DoubleWritable.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">iter</op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="close"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/datavec/api/conf/Configuration;)V"
                       name="setConf"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/datavec/api/conf/Configuration">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">conf</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/datavec/api/conf/Configuration;"
                       name="getConf"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/datavec/api/conf/Configuration</return>
                  <ops>
                     <op code="get">conf</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">names</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iter</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;I)Ljava/lang/String;"
                       name="getBinaryString"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.nameToBinary</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Ljava/lang/String;"
                       name="nameToBinary"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.possibleCharacters</op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.toBinaryString</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.StringUtils.leftPad</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.maxLengthName</op>
                     <op code="call">
                        <name>org.apache.commons.lang3.StringUtils.rightPad</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.replaceAll</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.possibleCharacters</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.detectgender.GenderRecordReader.maxLengthName</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.userinterface">
         <class id="UIStorageExample"><!--Package: org.deeplearning4j.examples.quickstart.features.userinterface; name: org.deeplearning4j.examples.quickstart.features.userinterface.UIStorageExample; file: org.deeplearning4j.examples.quickstart.features.userinterface.UIStorageExample-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistNetwork</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="UIStorageExample_Java7"><!--Package: org.deeplearning4j.examples.quickstart.features.userinterface; name: org.deeplearning4j.examples.quickstart.features.userinterface.UIStorageExample_Java7; file: org.deeplearning4j.examples.quickstart.features.userinterface.UIStorageExample_Java7-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistNetwork</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.J7StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="RemoteUIExample"><!--Package: org.deeplearning4j.examples.quickstart.features.userinterface; name: org.deeplearning4j.examples.quickstart.features.userinterface.RemoteUIExample; file: org.deeplearning4j.examples.quickstart.features.userinterface.RemoteUIExample-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.enableRemoteListener</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistNetwork</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.core.storage.impl.RemoteUIStatsStorageRouter.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="BasicUIExample"><!--Package: org.deeplearning4j.examples.quickstart.features.userinterface; name: org.deeplearning4j.examples.quickstart.features.userinterface.BasicUIExample; file: org.deeplearning4j.examples.quickstart.features.userinterface.BasicUIExample-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistNetwork</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils.getMnistData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.densenet.model">
         <class id="DenseNetBuilder"><!--Package: org.deeplearning4j.examples.advanced.modelling.densenet.model; name: org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder; file: org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder">conf</attribute>
               <attribute final="false" public="false" static="false" type="I">growthRate</attribute>
               <attribute final="false" public="false" static="false" type="Z">useBottleNeck</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(IIIJIZ)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="J">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">growthRate</op>
                     <op code="put">useBottleNeck</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.ConvolutionLayer$AlgoMode.PREFER_FASTEST</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.cudnnAlgoMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/ConvolutionLayer$AlgoMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.schedule.ScheduleType.EPOCH</op>
                     <op code="call">
                        <name>org.nd4j.linalg.schedule.StepSchedule.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/schedule/ScheduleType">?</arg>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/schedule/ISchedule">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.RenormalizeL2PerLayer</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">conf</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/graph/ComputationGraph;"
                       name="getModel"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/graph/ComputationGraph</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getGrowthRate"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">growthRate</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(IIII)Ljava/lang/String;"
                       name="initLayer"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">growthRate</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;JLjava/util/List;)Ljava/lang/String;"
                       name="addTransitionLayer"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="J">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.AVG</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.toArray</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;[Ljava/lang/String;)Lorg/deeplearning4j/nn/conf/layers/ConvolutionLayer;"
                       name="addDenseLayer"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/conf/layers/ConvolutionLayer</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">growthRate</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">growthRate</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">useBottleNeck</op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;ILjava/lang/String;)Ljava/util/List;"
                       name="buildDenseBlock"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getLayerNames</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.increaseArray</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.addDenseLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getLayerNames</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.asList</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II[Ljava/lang/String;)V"
                       name="addOutputLayer"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.AVG</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.poolingType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.collapseDimensions</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;"
                       name="increaseArray"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.arraycopy</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="ILjava/lang/Object">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)[Ljava/lang/String;"
                       name="getLayerNames"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.toArray</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="DenseNetModel"><!--Package: org.deeplearning4j.examples.advanced.modelling.densenet.model; name: org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel; file: org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/deeplearning4j/examples/advanced/modelling/densenet/model/DenseNetModel">instance</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/examples/advanced/modelling/densenet/model/DenseNetModel;"
                       name="getInstance"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/densenet/model/DenseNetModel</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.instance</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.instance</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.instance</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(JIIII)Lorg/deeplearning4j/nn/graph/ComputationGraph;"
                       name="buildNetwork"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="J">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/graph/ComputationGraph</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="IIIJIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getGrowthRate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getGrowthRate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getGrowthRate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getGrowthRate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getGrowthRate</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.initLayer</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.buildDenseBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.addTransitionLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="JLjava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.buildDenseBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.addTransitionLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="JLjava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.buildDenseBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.addTransitionLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="JLjava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.buildDenseBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.toArray</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.addOutputLayer</name>
                        <args>
                           <arg type="II[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetBuilder.getModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec">
         <class id="TrainNews"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews; file: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews-->
            <attributes>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">DATA_PATH</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">wordVectors</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NEWSDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.DATA_PATH</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.readWord2VecModel</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.dataDirectory</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.wordVectors</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.batchSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.truncateLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.train</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.dataDirectory</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.wordVectors</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.batchSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.truncateLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.train</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.wordVectors</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.vocab</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.wordAtIndex</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TrainNews.DATA_PATH</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="TestNews"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews; file: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">wordVectors</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JLabel">jLabel3</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljavax/swing/JTextArea">jTextArea1</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">net</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.initComponents</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NEWSDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.dataLocalPath</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="initComponents"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JScrollPane.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JTextArea.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">jTextArea1</op>
                     <op code="call">
                        <name>javax.swing.JButton.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">jLabel3</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">jTextArea1</op>
                     <op code="call">
                        <name>javax.swing.JTextArea.setColumns</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">jTextArea1</op>
                     <op code="call">
                        <name>javax.swing.JTextArea.setRows</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">jTextArea1</op>
                     <op code="call">
                        <name>javax.swing.JScrollPane.setViewportView</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JButton.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JButton.addActionListener</name>
                        <args>
                           <arg type="Ljava/awt/event/ActionListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.getContentPane</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Container">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.getContentPane</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.Container.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.GroupLayout$Alignment.LEADING</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createParallelGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Alignment">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createSequentialGroup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addContainerGap</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.GroupLayout$Alignment.LEADING</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createParallelGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Alignment">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createSequentialGroup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.GroupLayout$Alignment.LEADING</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createParallelGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Alignment">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addGap</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createSequentialGroup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addGap</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="get">jLabel3</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addContainerGap</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.setHorizontalGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.GroupLayout$Alignment.LEADING</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createParallelGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Alignment">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createSequentialGroup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addContainerGap</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.LayoutStyle$ComponentPlacement.RELATED</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addPreferredGap</name>
                        <args>
                           <arg type="Ljavax/swing/LayoutStyle$ComponentPlacement">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.LayoutStyle$ComponentPlacement.RELATED</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addPreferredGap</name>
                        <args>
                           <arg type="Ljavax/swing/LayoutStyle$ComponentPlacement">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.LayoutStyle$ComponentPlacement.RELATED</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addPreferredGap</name>
                        <args>
                           <arg type="Ljavax/swing/LayoutStyle$ComponentPlacement">?</arg>
                        </args>
                     </op>
                     <op code="get_static">javax.swing.GroupLayout$Alignment.LEADING</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.createParallelGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Alignment">?</arg>
                        </args>
                     </op>
                     <op code="get">jLabel3</op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addComponent</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$SequentialGroup.addContainerGap</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout$ParallelGroup.addGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.GroupLayout.setVerticalGroup</name>
                        <args>
                           <arg type="Ljavax/swing/GroupLayout$Group">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/awt/event/ActionEvent;)V"
                       name="jButton1ActionPerformed"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/awt/event/ActionEvent">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">jTextArea1</op>
                     <op code="call">
                        <name>javax.swing.JTextArea.getText</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.prepareTestData</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.slice</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sumNumber</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.slice</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sumNumber</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/Reader">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.readLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">jLabel3</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.setText</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.UIManager.getInstalledLookAndFeels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.UIManager$LookAndFeelInfo.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.UIManager$LookAndFeelInfo.getClassName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.UIManager.setLookAndFeel</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Class.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.logging.Logger.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.util.logging.Level.SEVERE</op>
                     <op code="call">
                        <name>java.util.logging.Logger.log</name>
                        <args>
                           <arg type="Ljava/util/logging/Level">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.tokenizerFactory</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.net</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.readWord2VecModel</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.wordVectors</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="prepareTestData"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.hasWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.lookupTable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.WeightLookupTable.layerSize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.TestNews.wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVectorMatrix</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="PrepareWordVector"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector; file: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NEWSDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.minWordFrequency</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.layerSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.windowSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.lookupTable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.writeWordVectors</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/WeightLookupTable">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.PrepareWordVector.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="NewsIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator; file: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">wordVectors</attribute>
               <attribute final="true" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="true" public="false" static="false" type="I">vectorSize</attribute>
               <attribute final="true" public="false" static="false" type="I">truncateLength</attribute>
               <attribute final="false" public="false" static="false" type="I">maxLength</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">dataDirectory</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">categoryData</attribute>
               <attribute final="false" public="false" static="false" type="I">cursor</attribute>
               <attribute final="false" public="false" static="false" type="I">totalNews</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
               <attribute final="false" public="false" static="false" type="I">newsPosition</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">labels</attribute>
               <attribute final="false" public="false" static="false" type="I">currCategory</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors;IIZLorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                     <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">categoryData</op>
                     <op code="put">cursor</op>
                     <op code="put">totalNews</op>
                     <op code="put">newsPosition</op>
                     <op code="put">currCategory</op>
                     <op code="put">dataDirectory</op>
                     <op code="put">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.vocab</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.wordAtIndex</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">vectorSize</op>
                     <op code="put">wordVectors</op>
                     <op code="put">truncateLength</op>
                     <op code="put">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.populateData</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">labels</op>
                     <op code="get">categoryData</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">labels</op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="Builder"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">cursor</op>
                     <op code="get">totalNews</op>
                     <op code="call">
                        <name>java.util.NoSuchElementException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.nextDataSet</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="nextDataSet"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">cursor</op>
                     <op code="get">totalNews</op>
                     <op code="get">currCategory</op>
                     <op code="get">categoryData</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">categoryData</op>
                     <op code="get">currCategory</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">newsPosition</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">categoryData</op>
                     <op code="get">currCategory</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">currCategory</op>
                     <op code="put">currCategory</op>
                     <op code="get">cursor</op>
                     <op code="put">cursor</op>
                     <op code="put">currCategory</op>
                     <op code="get">newsPosition</op>
                     <op code="put">newsPosition</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="put">maxLength</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.hasWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="put">maxLength</op>
                     <op code="get">maxLength</op>
                     <op code="get">truncateLength</op>
                     <op code="get">truncateLength</op>
                     <op code="put">maxLength</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">vectorSize</op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">categoryData</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVectorMatrix</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxLength</op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="loadFeaturesFromFile"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.loadFeaturesFromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="loadFeaturesFromString"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.hasWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">vectorSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVectorMatrix</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Z)V"
                       name="populateData"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dataDirectory</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separator</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/Reader">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.readLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dataDirectory</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separator</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separator</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dataDirectory</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separator</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separator</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/Reader">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.readLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">totalNews</op>
                     <op code="put">totalNews</op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.of</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">categoryData</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">vectorSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">categoryData</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">cursor</op>
                     <op code="put">newsPosition</op>
                     <op code="put">currCategory</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="get">labels</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">cursor</op>
                     <op code="get">totalNews</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="remove"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getMaxLength"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">maxLength</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="NewsIterator$Builder"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder; file: org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator$Builder-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">dataDirectory</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">wordVectors</attribute>
               <attribute final="false" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="false" public="false" static="false" type="I">truncateLength</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
               <attribute final="false" public="false" static="false" type="Z">train</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="dataDirectory"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">dataDirectory</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors;)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="wordVectors"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">wordVectors</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="batchSize"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="truncateLength"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">truncateLength</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Z)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="train"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">train</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory;)Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder;"
                       name="tokenizerFactory"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$Builder</return>
                  <ops>
                     <op code="put">tokenizerFactory</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator;"
                       name="build"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator</return>
                  <ops>
                     <op code="get">dataDirectory</op>
                     <op code="get">wordVectors</op>
                     <op code="get">batchSize</op>
                     <op code="get">truncateLength</op>
                     <op code="get">train</op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.customcorpusword2vec.NewsIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                           <arg type="IIZLorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/modelling/textclassification/customcorpusword2vec/NewsIterator$1">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="toString"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">dataDirectory</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">truncateLength</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">train</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions">
         <class id="CustomLossUsageEx"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx-->
            <attributes>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/util/Random">rng</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.doTraining</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.doGradientCheck</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="doTraining"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.rng</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.getTrainingData</name>
                        <args>
                           <arg type="ILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.dataType</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/ILossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="doGradientCheck"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.fromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.getActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.randomValsinRightRange</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.fromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.getActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.randomValsinRightRange</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Object.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.computeGradient</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.shape</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.iter.NdIndexIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.iter.NdIndexIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.iter.NdIndexIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.util.ArrayUtil.toInts</name>
                        <args>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.computeScore</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.computeScore</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.abs</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.abs</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.isNaN</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.toString</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.toString</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/activations/IActivation;[I)Ljava/util/List;"
                       name="randomValsinRightRange"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.rng.distribution.impl.NormalDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.rand</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/rng/distribution/Distribution">?</arg>
                           <arg type="[J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.getActivation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossUsageEx.rng</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CustomLossDefinition"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">logger</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/activations/IActivation;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="scoreArray"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.getActivation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.abs</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mul</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.addi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muliColumnVector</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/activations/IActivation;Lorg/nd4j/linalg/api/ndarray/INDArray;Z)D"
                       name="computeScore"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.scoreArray</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sumNumber</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Number.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/activations/IActivation;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="computeScoreArray"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.scoreArray</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sum</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/activations/IActivation;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="computeGradient"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.getActivation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mul</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.sign</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sub</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.backprop</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muliColumnVector</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/activations/IActivation;Lorg/nd4j/linalg/api/ndarray/INDArray;Z)Lorg/nd4j/common/primitives/Pair;"
                       name="computeGradientAndScore"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Lorg/nd4j/common/primitives/Pair</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.computeScore</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.computeGradient</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="name"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="toString"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/Object;)Z"
                       name="equals"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/Object">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.canEqual</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="hashCode"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/Object;)Z"
                       name="canEqual"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Ljava/lang/Object">?</arg>
                  </args>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.customizingdl4j.lossfunctions.CustomLossDefinition.logger</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.quickstart.features.knn">
         <class id="NearestNeighbor"><!--Package: org.deeplearning4j.examples.wip.quickstart.features.knn; name: org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor; file: org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.processCifar10Images</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="processCifar10Images"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.readTrainingData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.CifarLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.CifarLoader.getInputStream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.IOUtils.toByteArray</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.time.Instant.now</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.copyOfRange</name>
                        <args>
                           <arg type="[BII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.range</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.mapToDouble</name>
                        <args>
                           <arg type="Ljava/util/function/IntToDoubleFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.DoubleStream.toArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.abs</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Byte.valueOf</name>
                        <args>
                           <arg type="B">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.stream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.min</name>
                        <args>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Optional.map</name>
                        <args>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Optional.get</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.stream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.Stream.min</name>
                        <args>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Optional.map</name>
                        <args>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Optional.get</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.time.temporal.ChronoUnit.MILLIS</op>
                     <op code="call">
                        <name>java.time.Instant.now</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.time.temporal.ChronoUnit.between</name>
                        <args>
                           <arg type="Ljava/time/temporal/Temporal">?</arg>
                           <arg type="Ljava/time/temporal/Temporal">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/Map;"
                       name="readTrainingData"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Ljava/util/Map</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.CifarLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.CifarLoader.getInputStream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.IOUtils.toByteArray</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.copyOfRange</name>
                        <args>
                           <arg type="[BII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.range</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.IntStream.mapToDouble</name>
                        <args>
                           <arg type="Ljava/util/function/IntToDoubleFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.stream.DoubleStream.toArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.abs</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Byte.valueOf</name>
                        <args>
                           <arg type="B">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.features.knn.NearestNeighbor.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses">
         <class id="MultiRecordDataSetIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses; name: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator; file: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="false" public="false" static="false" type="I">batchNum</attribute>
               <attribute final="false" public="false" static="false" type="I">numExample</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/examples/advanced/modelling/captcharecognition/dataclasses/MulRecordDataLoader">load</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor">preProcessor</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(ILjava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="ILorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(ILorg/datavec/image/transform/ImageTransform;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">batchNum</op>
                     <op code="put">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">load</op>
                     <op code="get">load</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">numExample</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/MultiDataSet</return>
                  <ops>
                     <op code="get">batchNum</op>
                     <op code="put">batchNum</op>
                     <op code="get">load</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">preProcessor</op>
                     <op code="get">preProcessor</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSetPreProcessor.preProcess</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">preProcessor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor</return>
                  <ops>
                     <op code="get">preProcessor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">batchNum</op>
                     <op code="get">load</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">batchNum</op>
                     <op code="get">numExample</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/MultiDataSet</return>
                  <ops>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MulRecordDataLoader"><!--Package: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses; name: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader; file: org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false" public="false" static="true" type="I">height</attribute>
               <attribute final="false" public="false" static="true" type="I">width</attribute>
               <attribute final="false" public="false" static="true" type="I">channels</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/io/File">fullDir</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Iterator">fileIterator</attribute>
               <attribute final="false" public="false" static="false" type="I">numExample</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.height</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.width</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.channels</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="IIILorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/datavec/image/transform/ImageTransform;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.height</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.width</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.channels</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="IIILorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(IIILorg/datavec/image/transform/ImageTransform;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/image/transform/ImageTransform">?</arg>
                        </args>
                     </op>
                     <op code="put">fullDir</op>
                     <op code="put">numExample</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.height</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.width</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.channels</op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.CAPTCHAIMAGE</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">fullDir</op>
                     <op code="get">fullDir</op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">fullDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">fullDir</op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get">fullDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">fullDir</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.load</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="load"
                       static="false"
                       visibility="protected">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">fullDir</op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.listFiles</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">fileIterator</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">numExample</op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/MultiDataSet;"
                       name="convertDataSet"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/MultiDataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">fileIterator</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">fileIterator</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.lastIndexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.asMatrix</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getAffinityManager</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.concurrency.AffinityManager$Location.DEVICE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.concurrency.AffinityManager.ensureLocation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/concurrency/AffinityManager$Location">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.MultiDataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.MultiDataSet.merge</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/MultiDataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.convertDataSet</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.error</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.load</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">numExample</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.log</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.height</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.width</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MulRecordDataLoader.channels</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.utils">
         <class id="VAEPlotUtil$MNISTLatentSpaceVisualizer"><!--Package: org.deeplearning4j.examples.utils; name: org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer; file: org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer-->
            <attributes>
               <attribute final="false" public="false" static="false" type="D">imageScale</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">digits</attribute>
               <attribute final="false" public="false" static="false" type="I">plotFrequency</attribute>
               <attribute final="false" public="false" static="false" type="I">gridWidth</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(DLjava/util/List;I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">imageScale</op>
                     <op code="put">digits</op>
                     <op code="put">plotFrequency</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.sqrt</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="put">gridWidth</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Ljava/lang/String;"
                       name="getTitle"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">plotFrequency</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="visualize"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer.getTitle</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BorderLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">gridWidth</op>
                     <op code="call">
                        <name>java.awt.GridLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="get">digits</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/utils/VAEPlotUtil$MNISTLatentSpaceVisualizer">?</arg>
                           <arg type="Ljavax/swing/JPanel">?</arg>
                           <arg type="Ljavax/swing/JFrame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.addChangeListener</name>
                        <args>
                           <arg type="Ljavax/swing/event/ChangeListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer.getComponents</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Ljava/util/List;"
                       name="getComponents"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">digits</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">digits</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getRaster</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.WritableRaster.setSample</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.getImage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">imageScale</op>
                     <op code="get">imageScale</op>
                     <op code="call">
                        <name>java.awt.Image.getScaledInstance</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/Icon">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="VAEPlotUtil"><!--Package: org.deeplearning4j.examples.utils; name: org.deeplearning4j.examples.utils.VAEPlotUtil; file: org.deeplearning4j.examples.utils.VAEPlotUtil-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V"
                       name="scatterPlot"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.max</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.min</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.createChart</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="DDLjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.setSnapToTicks</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/JPanel">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="DDLjava/lang/String">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljavax/swing/JFrame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.addChangeListener</name>
                        <args>
                           <arg type="Ljavax/swing/event/ChangeListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BorderLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;Lorg/nd4j/linalg/api/ndarray/INDArray;DDI)V"
                       name="plotData"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.createChart</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.setSnapToTicks</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$2.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/JPanel">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="DDLjavax/swing/JFrame">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JSlider.addChangeListener</name>
                        <args>
                           <arg type="Ljavax/swing/event/ChangeListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BorderLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.getTitle</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Ljava/lang/String;"
                       name="getTitle"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/jfree/data/xy/XYDataset;"
                       name="createDataSet"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/jfree/data/xy/XYDataset</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.columns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.add</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeries">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;DD)Lorg/jfree/chart/JFreeChart;"
                       name="createChart"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>Lorg/jfree/chart/JFreeChart</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.createChart</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="DDLjava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;DDLjava/lang/String;)Lorg/jfree/chart/JFreeChart;"
                       name="createChart"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/jfree/chart/JFreeChart</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.createDataSet</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.chart.plot.PlotOrientation.VERTICAL</op>
                     <op code="call">
                        <name>org.jfree.chart.ChartFactory.createScatterPlot</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/jfree/data/xy/XYDataset">?</arg>
                           <arg type="Lorg/jfree/chart/plot/PlotOrientation">?</arg>
                           <arg type="ZZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.JFreeChart.getPlot</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.getRenderer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BasicStroke.&lt;init&gt;</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYItemRenderer.setBaseOutlineStroke</name>
                        <args>
                           <arg type="Ljava/awt/Stroke">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setNoDataMessage</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainPannable</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangePannable</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainZeroBaselineVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeZeroBaselineVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BasicStroke.&lt;init&gt;</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainGridlineStroke</name>
                        <args>
                           <arg type="Ljava/awt/Stroke">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BasicStroke.&lt;init&gt;</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainMinorGridlineStroke</name>
                        <args>
                           <arg type="Ljava/awt/Stroke">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.blue</op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainGridlinePaint</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BasicStroke.&lt;init&gt;</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeGridlineStroke</name>
                        <args>
                           <arg type="Ljava/awt/Stroke">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.BasicStroke.&lt;init&gt;</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeMinorGridlineStroke</name>
                        <args>
                           <arg type="Ljava/awt/Stroke">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.blue</op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeGridlinePaint</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainMinorGridlinesVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeMinorGridlinesVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.getRenderer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.black</op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesOutlinePaint</name>
                        <args>
                           <arg type="ILjava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseOutlinePaint</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.getDomainAxis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setRange</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickMarkInsideLength</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickMarkOutsideLength</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setMinorTickCount</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setMinorTickMarksVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.getRangeAxis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickMarkInsideLength</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickMarkOutsideLength</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setMinorTickCount</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setMinorTickMarksVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setRange</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="DataUtilities"><!--Package: org.deeplearning4j.examples.utils; name: org.deeplearning4j.examples.utils.DataUtilities; file: org.deeplearning4j.examples.utils.DataUtilities-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Ljava/lang/String;)Z"
                       name="downloadFile"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getParentFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.impl.client.HttpClientBuilder.create</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.impl.client.HttpClientBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.client.methods.HttpGet.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.impl.client.CloseableHttpClient.execute</name>
                        <args>
                           <arg type="Lorg/apache/http/client/methods/HttpUriRequest">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.client.methods.CloseableHttpResponse.getEntity</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.HttpEntity.writeTo</name>
                        <args>
                           <arg type="Ljava/io/OutputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.flush</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.client.methods.CloseableHttpResponse.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.http.client.methods.CloseableHttpResponse.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Ljava/lang/String;)V"
                       name="extractTarGz"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.endsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextEntry</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveEntry.isDirectory</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveEntry.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveEntry.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/OutputStream">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveInputStream.read</name>
                        <args>
                           <arg type="[BII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedOutputStream.write</name>
                        <args>
                           <arg type="[BII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveInputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.compress.archivers.tar.TarArchiveInputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="PlotUtil"><!--Package: org.deeplearning4j.examples.utils; name: org.deeplearning4j.examples.utils.PlotUtil; file: org.deeplearning4j.examples.utils.PlotUtil-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;Lorg/nd4j/linalg/api/ndarray/INDArray;I)V"
                       name="plotTrainingData"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.min</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.max</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.allBatches</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createBackgroundData</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createDataSetTrain</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createChart</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYZDataset">?</arg>
                           <arg type="[D[DILorg/jfree/data/xy/XYDataset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLocation</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;Lorg/nd4j/linalg/api/ndarray/INDArray;I)V"
                       name="plotTestData"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.min</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.max</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createBackgroundData</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.allBatches</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createDataSetTest</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.createChart</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYZDataset">?</arg>
                           <arg type="[D[DILorg/jfree/data/xy/XYDataset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setLocationRelativeTo</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/jfree/data/xy/XYZDataset;"
                       name="createBackgroundData"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/jfree/data/xy/XYZDataset</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.DefaultXYZDataset.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.DefaultXYZDataset.addSeries</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                           <arg type="[[D">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/jfree/data/xy/XYDataset;"
                       name="createDataSetTrain"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/jfree/data/xy/XYDataset</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getExecutioner</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.impl.indexaccum.IMax.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.executioner.OpExecutioner.exec</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ops/IndexAccumulation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.add</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeries">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/jfree/data/xy/XYDataset;"
                       name="createDataSetTest"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/jfree/data/xy/XYDataset</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Comparable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.argMax</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.argMax</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeries.add</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.data.xy.XYSeriesCollection.addSeries</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYSeries">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/jfree/data/xy/XYZDataset;[D[DILorg/jfree/data/xy/XYDataset;)Lorg/jfree/chart/JFreeChart;"
                       name="createChart"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/jfree/data/xy/XYZDataset">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Lorg/jfree/data/xy/XYDataset">?</arg>
                  </args>
                  <return>Lorg/jfree/chart/JFreeChart</return>
                  <ops>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setRange</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setRange</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYBlockRenderer.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockWidth</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.GrayPaintScale.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYBlockRenderer.setPaintScale</name>
                        <args>
                           <arg type="Lorg/jfree/chart/renderer/PaintScale">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/data/xy/XYDataset">?</arg>
                           <arg type="Lorg/jfree/chart/axis/ValueAxis">?</arg>
                           <arg type="Lorg/jfree/chart/axis/ValueAxis">?</arg>
                           <arg type="Lorg/jfree/chart/renderer/xy/XYItemRenderer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.lightGray</op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setBackgroundPaint</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDomainGridlinesVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRangeGridlinesVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.ui.RectangleInsets.&lt;init&gt;</name>
                        <args>
                           <arg type="DDDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setAxisOffset</name>
                        <args>
                           <arg type="Lorg/jfree/ui/RectangleInsets">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.JFreeChart.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/jfree/chart/plot/Plot">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.JFreeChart.getXYPlot</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.getRenderer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Boolean.valueOf</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYItemRenderer.setSeriesVisibleInLegend</name>
                        <args>
                           <arg type="ILjava/lang/Boolean">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.white</op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setAxisLinePaint</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.white</op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickMarkPaint</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.Font.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.axis.NumberAxis.setTickLabelFont</name>
                        <args>
                           <arg type="Ljava/awt/Font">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.GrayPaintScale.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/jfree/chart/renderer/PaintScale">?</arg>
                           <arg type="Lorg/jfree/chart/axis/ValueAxis">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setStripOutlineVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setSubdivisionCount</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT</op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setAxisLocation</name>
                        <args>
                           <arg type="Lorg/jfree/chart/axis/AxisLocation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setAxisOffset</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.ui.RectangleInsets.&lt;init&gt;</name>
                        <args>
                           <arg type="DDDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setMargin</name>
                        <args>
                           <arg type="Lorg/jfree/ui/RectangleInsets">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.awt.Color.red</op>
                     <op code="call">
                        <name>org.jfree.chart.block.BlockBorder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Paint">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setFrame</name>
                        <args>
                           <arg type="Lorg/jfree/chart/block/BlockFrame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.ui.RectangleInsets.&lt;init&gt;</name>
                        <args>
                           <arg type="DDDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setPadding</name>
                        <args>
                           <arg type="Lorg/jfree/ui/RectangleInsets">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setStripWidth</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.ui.RectangleEdge.LEFT</op>
                     <op code="call">
                        <name>org.jfree.chart.title.PaintScaleLegend.setPosition</name>
                        <args>
                           <arg type="Lorg/jfree/ui/RectangleEdge">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.JFreeChart.addSubtitle</name>
                        <args>
                           <arg type="Lorg/jfree/chart/title/Title">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.ChartUtilities.applyCurrentTheme</name>
                        <args>
                           <arg type="Lorg/jfree/chart/JFreeChart">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDataset</name>
                        <args>
                           <arg type="ILorg/jfree/data/xy/XYDataset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setBaseLinesVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setRenderer</name>
                        <args>
                           <arg type="ILorg/jfree/chart/renderer/xy/XYItemRenderer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.jfree.chart.plot.DatasetRenderingOrder.FORWARD</op>
                     <op code="call">
                        <name>org.jfree.chart.plot.XYPlot.setDatasetRenderingOrder</name>
                        <args>
                           <arg type="Lorg/jfree/chart/plot/DatasetRenderingOrder">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(DDDDI)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="generatePointsOnGraph"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[D">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="allBatches"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.asList</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.addAll</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.ListDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.ListDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions">
         <class id="CustomActivationUsageEx"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions.CustomActivationUsageEx; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions.CustomActivationUsageEx-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.SumModel.getTrainingData</name>
                        <args>
                           <arg type="ILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions.CustomActivationDefinition.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CustomActivationDefinition"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions.CustomActivationDefinition; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.activationfunctions.CustomActivationDefinition-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.BaseActivationFunction.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Z)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getActivation"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getExecutioner</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.impl.transforms.strict.Tanh.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.executioner.OpExecutioner.execAndReturn</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ops/TransformOp">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/common/primitives/Pair;"
                       name="backprop"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/common/primitives/Pair</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getExecutioner</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.impl.transforms.strict.TanDerivative.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.executioner.OpExecutioner.exec</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ops/Op">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muli</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork">
         <class id="GaussianMixtureIterator"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork; name: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator; file: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator-->
            <attributes>
               <attribute final="true" public="false" static="false" type="I">iterationsPerBatch</attribute>
               <attribute final="true" public="false" static="false" type="I">miniBatchSize</attribute>
               <attribute final="true" public="false" static="false" type="I">numExamplesToFetch</attribute>
               <attribute final="false" public="false" static="false" type="I">examplesSoFar</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/Random">mRNG</attribute>
               <attribute final="true" public="false" static="false" type="I">mMixturesPerLabel</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iterationsPerBatch</op>
                     <op code="put">miniBatchSize</op>
                     <op code="put">numExamplesToFetch</op>
                     <op code="put">examplesSoFar</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">mRNG</op>
                     <op code="put">mMixturesPerLabel</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">examplesSoFar</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">examplesSoFar</op>
                     <op code="call">
                        <name>java.util.NoSuchElementException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.nextThrows</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">examplesSoFar</op>
                     <op code="put">examplesSoFar</op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="nextThrows"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">mRNG</op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">mRNG</op>
                     <op code="call">
                        <name>java.util.Random.nextBoolean</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.math3.distribution.MultivariateNormalDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="[D[[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">examplesSoFar</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MixtureDensityNetwork"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork; name: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.MixtureDensityNetwork; file: org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.MixtureDensityNetwork-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.DecimalFormat.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$Builder.gaussians</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$Builder.labelWidth</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nadam.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/ILossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.PerformanceListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.mixturedensitynetwork.GaussianMixtureIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.reshape</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getnLayers</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.activateSelectedLayers</name>
                        <args>
                           <arg type="IILorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity.extractComponents</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$MixtureDensityComponents.getAlpha</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$MixtureDensityComponents.getSigma</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMixtureDensity$MixtureDensityComponents.getMu</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.seq2seq">
         <class id="CustomSequenceIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.seq2seq; name: org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator; file: org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Random">randnumG</attribute>
               <attribute final="true" public="false" static="false" type="I">seed</attribute>
               <attribute final="true" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="true" public="false" static="false" type="I">totalBatches</attribute>
               <attribute final="true" public="false" static="true" type="I">numDigits</attribute>
               <attribute final="true" public="false" static="true" type="I">SEQ_VECTOR_DIM</attribute>
               <attribute final="true" public="false" static="true" type="Ljava/util/Map">oneHotMap</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="[Ljava/lang/String">oneHotOrder</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Set">seenSequences</attribute>
               <attribute final="false" public="false" static="false" type="Z">toTestSet</attribute>
               <attribute final="false" public="false" static="false" type="I">currentBatch</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(III)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">seenSequences</op>
                     <op code="put">toTestSet</op>
                     <op code="put">currentBatch</op>
                     <op code="put">seed</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put">randnumG</op>
                     <op code="put">batchSize</op>
                     <op code="put">totalBatches</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotEncoding</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/api/MultiDataSet;"
                       name="generateTest"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSet</return>
                  <ops>
                     <op code="put">toTestSet</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/api/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">randnumG</op>
                     <op code="call">
                        <name>java.lang.Math.pow</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">randnumG</op>
                     <op code="call">
                        <name>java.lang.Math.pow</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">seenSequences</op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.prepToString</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapToOneHot</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.prepToString</name>
                        <args>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get">toTestSet</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapToOneHot</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.prepToString</name>
                        <args>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapToOneHot</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.vstack</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.vstack</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.vstack</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">currentBatch</op>
                     <op code="put">currentBatch</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.MultiDataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">currentBatch</op>
                     <op code="put">toTestSet</op>
                     <op code="call">
                        <name>java.util.HashSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">seenSequences</op>
                     <op code="get">seed</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put">randnumG</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">currentBatch</op>
                     <op code="get">totalBatches</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSet</return>
                  <ops>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="remove"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)[Ljava/lang/String;"
                       name="prepToString"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.insert</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.insert</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.toString</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(IZ)[Ljava/lang/String;"
                       name="prepToString"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.toString</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="mapToOneHot"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JJJD">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)Ljava/lang/String;"
                       name="mapToString"
                       static="true"
                       visibility="default">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)[Ljava/lang/String;"
                       name="oneHotDecode"
                       static="true"
                       visibility="default">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.slice</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asInt</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapFromOneHot</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([I)Ljava/lang/String;"
                       name="mapFromOneHot"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.reverse</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="oneHotEncoding"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotMap</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotOrder</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="Seq2SeqPredicter"><!--Package: org.deeplearning4j.examples.advanced.modelling.seq2seq; name: org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter; file: org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/graph/ComputationGraph">net</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/api/ndarray/INDArray">decoderInputTemplate</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">decoderInputTemplate</op>
                     <op code="put">net</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSet;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="output"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSet;Z)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="output"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapToString</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.stepOnce</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.join</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                           <arg type="[Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.output</name>
                        <args>
                           <arg type="Z[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.mapToString</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.join</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                           <arg type="[Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSet;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="stepOnce"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.output</name>
                        <args>
                           <arg type="Z[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">decoderInputTemplate</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.copyTimeSteps</name>
                        <args>
                           <arg type="ILorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ILorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)V"
                       name="copyTimeSteps"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="JJZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="JJZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.dup</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.assign</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="AdditionModelWithSeq2Seq"><!--Package: org.deeplearning4j.examples.advanced.modelling.seq2seq; name: org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq; file: org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq-->
            <attributes>
               <attribute final="true" public="false" static="true" type="I">NUM_DIGITS</attribute>
               <attribute final="true" public="true" static="true" type="I">seed</attribute>
               <attribute final="false" public="true" static="true" type="I">batchSize</attribute>
               <attribute final="false" public="true" static="true" type="I">nEpochs</attribute>
               <attribute final="true" public="false" static="true" type="I">numHiddenNodes</attribute>
               <attribute final="true" public="false" static="true" type="I">FEATURE_VEC_SIZE</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.setDefaultDataTypes</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq.batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.recurrent</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.recurrent</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.rnn.LastTimeStepVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.rnn.DuplicateToTimeSeriesVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTSIGN</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq.nEpochs</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.printf</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.generateTest</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq.encode_decode_eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.generateTest</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.Seq2SeqPredicter.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSet">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;)V"
                       name="encode_decode_eval"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.seq2seq.CustomSequenceIterator.oneHotDecode</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.pow</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq.batchSize</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.seq2seq.AdditionModelWithSeq2Seq.nEpochs</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave">
         <class id="FeaturizedPreSave"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave; name: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave; file: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true" public="false" static="true" type="I">trainPerc</attribute>
               <attribute final="true" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">featurizeExtractionLayer</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16$VGG16Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.ZooModel.initPretrained</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.setup</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.featurize</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.saveToDisk</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.featurize</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.saveToDisk</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/DataSet;IZ)V"
                       name="saveToDisk"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="FitFromFeaturized"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave; name: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized; file: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">featureExtractionLayer</attribute>
               <attribute final="true" public="false" static="true" type="J">seed</attribute>
               <attribute final="true" public="false" static="true" type="I">numClasses</attribute>
               <attribute final="true" public="false" static="true" type="I">nEpochs</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16$VGG16Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.ZooModel.initPretrained</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.fineTuneConfiguration</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/transferlearning/FineTuneConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setFeatureExtractor</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.removeVertexKeepConnections</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.distribution.NormalDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/distribution/Distribution">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.trainIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.testIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.unfrozenGraph</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.unfrozenGraph</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.fitFeaturized</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearningHelper.unfrozenGraph</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FitFromFeaturized.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.quickstart.modelling">
         <class id="AnimalClassifier"><!--Package: org.deeplearning4j.examples.wip.quickstart.modelling; name: org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier; file: org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/Map">eats</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/Map">sounds</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/Map">classifiers</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.DATAEXAMPLES</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.readEnumCSV</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.eats</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.readEnumCSV</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.sounds</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.readEnumCSV</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.classifiers</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.readCSVDataset</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.readCSVDataset</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.makeAnimalsForTesting</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.setFittedClassifiers</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.logAnimals</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Map;)V"
                       name="logAnimals"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Map.values</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collection.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.log</op>
                     <op code="call">
                        <name>java.lang.Object.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Ljava/util/Map;)V"
                       name="setFittedClassifiers"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.classifiers</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.slice</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.getFloatArrayFromSlice</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.maxIndex</name>
                        <args>
                           <arg type="[F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)[F"
                       name="getFloatArrayFromSlice"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>F</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.columns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.columns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getFloat</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([F)I"
                       name="maxIndex"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="F">?</arg>
                  </args>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/DataSet;)Ljava/util/Map;"
                       name="makeAnimalsForTesting"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                  </args>
                  <return>Ljava/util/Map</return>
                  <ops>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.slice</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.eats</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.sounds</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getFloat</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Float.valueOf</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Ljava/util/Map;"
                       name="readEnumCSV"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/util/Map</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.nio.charset.StandardCharsets.UTF_8</op>
                     <op code="call">
                        <name>org.apache.commons.io.IOUtils.readLines</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;III)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="readCSVDataset"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.quickstart.modelling.AnimalClassifier.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.alphagozero">
         <class id="AlphaGoZeroTrainer"><!--Package: org.deeplearning4j.examples.advanced.modelling.alphagozero; name: org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer; file: org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DualResnetModel.getModel</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.alphagozero.AlphaGoZeroTrainer.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder">
         <class id="VaeMNIST2dPlots"><!--Package: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder; name: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots; file: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getRandom</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.rng.Random.setSeed</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.encoderLayerSizes</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.decoderLayerSizes</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.pzxActivationFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.getActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.BernoulliReconstructionDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.reconstructionDistribution</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/variational/ReconstructionDistribution">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayer</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots.getLatentSpaceGrid</name>
                        <args>
                           <arg type="DDI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.activate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots$PlottingListener.&lt;init&gt;</name>
                        <args>
                           <arg type="ILorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/variationalautoencoder/VaeMNIST2dPlots$1">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots.log</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.pretrain</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.plotData</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="DDI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil$MNISTLatentSpaceVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(DDI)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getLatentSpaceGrid"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="D">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.FLOAT</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.linspace</name>
                        <args>
                           <arg type="DDJLorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.assign</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.assign</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots.visualize</op>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="VaeMNISTAnomaly"><!--Package: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder; name: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNISTAnomaly; file: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNISTAnomaly-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getRandom</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.rng.Random.setSeed</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.encoderLayerSizes</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.decoderLayerSizes</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.pzxActivationFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.BernoulliReconstructionDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.reconstructionDistribution</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/variational/ReconstructionDistribution">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.variational.VariationalAutoencoder$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.pretrain</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayer</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.reconstructionLogProbability</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="JZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNISTAnomaly$1.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.values</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collection.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.sort</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.setInput</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.preOutput</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.generateAtMeanGivenZ</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.setInput</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.preOutput</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.generateAtMeanGivenZ</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNISTAnomaly.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNISTAnomaly.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="VaeMNIST2dPlots$PlottingListener"><!--Package: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder; name: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots$PlottingListener; file: org.deeplearning4j.examples.quickstart.modeling.variationalautoencoder.VaeMNIST2dPlots$PlottingListener-->
            <attributes>
               <attribute final="true" public="false" static="false" type="I">plotEveryNMinibatches</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/api/ndarray/INDArray">testFeatures</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/api/ndarray/INDArray">latentSpaceGrid</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">latentSpaceVsEpoch</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">digitsGrid</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(ILorg/nd4j/linalg/api/ndarray/INDArray;Lorg/nd4j/linalg/api/ndarray/INDArray;Ljava/util/List;Ljava/util/List;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.api.BaseTrainingListener.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">plotEveryNMinibatches</op>
                     <op code="put">testFeatures</op>
                     <op code="put">latentSpaceGrid</op>
                     <op code="put">latentSpaceVsEpoch</op>
                     <op code="put">digitsGrid</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/api/Model;II)V"
                       name="iterationDone"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">plotEveryNMinibatches</op>
                     <op code="get">testFeatures</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.activate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="get">latentSpaceVsEpoch</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">latentSpaceGrid</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.variational.VariationalAutoencoder.generateAtMeanGivenZ</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">digitsGrid</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.captcharecognition">
         <class id="MultiDigitNumberRecognition"><!--Package: org.deeplearning4j.examples.advanced.modelling.captcharecognition; name: org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition; file: org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">rootPath</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">modelDirPath</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">modelPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelDirPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.log</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelPath</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.createModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.dataclasses.MultiRecordDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelPredict</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelPredict</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/graph/ComputationGraph;"
                       name="createModel"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/graph/ComputationGraph</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.RenormalizeL2PerLayer</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER_UNIFORM</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                           <arg type="[I[I[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator;)V"
                       name="modelPredict"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.MultiDataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.MultiDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.output</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.MultiDataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.batchSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Boolean.valueOf</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.MultiDataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.log</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.batchSize</op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.rootPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.rootPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.rootPath</op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.String.lastIndexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.io.File.separatorChar</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.captcharecognition.MultiDigitNumberRecognition.modelPath</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly">
         <class id="FineTuneFromBlockFour"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly; name: org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour; file: org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true" public="false" static="true" type="I">numClasses</attribute>
               <attribute final="true" public="false" static="true" type="J">seed</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">featureExtractionLayer</attribute>
               <attribute final="true" public="false" static="true" type="I">trainPerc</attribute>
               <attribute final="true" public="false" static="true" type="I">batchSize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.restoreComputationGraph</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.fineTuneConfiguration</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/transferlearning/FineTuneConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setFeatureExtractor</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.setup</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.finetuneonly.FineTuneFromBlockFour.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.externalerrors">
         <class id="MultiLayerNetworkExternalErrors"><!--Package: org.deeplearning4j.examples.advanced.features.externalerrors; name: org.deeplearning4j.examples.advanced.features.externalerrors.MultiLayerNetworkExternalErrors; file: org.deeplearning4j.examples.advanced.features.externalerrors.MultiLayerNetworkExternalErrors-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getRandom</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.rng.Random.setSeed</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nadam.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.rand</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setInput</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForward</name>
                        <args>
                           <arg type="ZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.rand</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.backpropGradient</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getUpdater</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Updater.update</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Trainable">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/gradient/Gradient">?</arg>
                           <arg type="IIILorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.gradient.Gradient.gradient</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.subi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual">
         <class id="DL4JAlphaGoZeroBuilder"><!--Package: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual; name: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder; file: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration$GraphBuilder">conf</attribute>
               <attribute final="false" public="false" static="false" type="[I">strides</attribute>
               <attribute final="false" public="false" static="false" type="[I">kernelSize</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">convolutionMode</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="([I[ILorg/deeplearning4j/nn/conf/ConvolutionMode;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">kernelSize</op>
                     <op code="put">strides</op>
                     <op code="put">convolutionMode</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.LECUN_NORMAL</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="put">conf</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.nn.conf.ConvolutionMode.Same</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I[ILorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="addInputs"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="addOutputs"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration;"
                       name="buildAndReturn"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Ljava/lang/String;IZ)Ljava/lang/String;"
                       name="addConvBatchNormBlock"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">kernelSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">strides</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">convolutionMode</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.convolutionMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ILjava/lang/String;)Ljava/lang/String;"
                       name="addResidualBlock"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addConvBatchNormBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addConvBatchNormBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="get_static">org.deeplearning4j.nn.conf.graph.ElementWiseVertex$Op.Add</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.ElementWiseVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/ElementWiseVertex$Op">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ILjava/lang/String;)Ljava/lang/String;"
                       name="addResidualTower"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addResidualBlock</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ILjava/lang/String;)Ljava/lang/String;"
                       name="addConvolutionalTower"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addConvBatchNormBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Z)Ljava/lang/String;"
                       name="addPolicyHead"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">kernelSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">strides</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">convolutionMode</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.convolutionMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.CnnToFeedForwardPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputPreProcessors</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Z)Ljava/lang/String;"
                       name="addValueHead"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">kernelSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">strides</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">convolutionMode</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.convolutionMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ActivationLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.CnnToFeedForwardPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputPreProcessors</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.XENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="DualResnetModel"><!--Package: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual; name: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DualResnetModel; file: org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DualResnetModel-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Lorg/deeplearning4j/nn/graph/ComputationGraph;"
                       name="getModel"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/graph/ComputationGraph</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addInputs</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addConvBatchNormBlock</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addResidualTower</name>
                        <args>
                           <arg type="ILjava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addPolicyHead</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addValueHead</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.addOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.alphagozero.dualresidual.DL4JAlphaGoZeroBuilder.buildAndReturn</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.tsne">
         <class id="TSNEStandardExample"><!--Package: org.deeplearning4j.examples.quickstart.features.tsne; name: org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample; file: org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.dataLocalPath</op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.setDefaultDataTypes</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.loadTxt</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.getSyn0</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.numWords</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.wordAtIndex</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.setMaxIter</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.theta</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.normalize</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.useAdaGrad</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getParentFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdirs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.plot.BarnesHutTsne.saveAsFile</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.features.tsne.TSNEStandardExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.charmodelling.utils">
         <class id="CharacterIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.charmodelling.utils; name: org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator; file: org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator-->
            <attributes>
               <attribute final="false" public="false" static="false" type="[C">validCharacters</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Map">charToIdxMap</attribute>
               <attribute final="false" public="false" static="false" type="[C">fileCharacters</attribute>
               <attribute final="false" public="false" static="false" type="I">exampleLength</attribute>
               <attribute final="false" public="false" static="false" type="I">miniBatchSize</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Random">rng</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/LinkedList">exampleStartOffsets</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;Ljava/nio/charset/Charset;II[CLjava/util/Random;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/nio/charset/Charset">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="C">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                           <arg type="II[CLjava/util/Random">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;Ljava/nio/charset/Charset;II[CLjava/util/Random;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/nio/charset/Charset">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="C">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.LinkedList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalArgumentException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">validCharacters</op>
                     <op code="put">exampleLength</op>
                     <op code="put">miniBatchSize</op>
                     <op code="put">rng</op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">charToIdxMap</op>
                     <op code="get">charToIdxMap</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">charToIdxMap</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.containsKey</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.toPath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.nio.file.Files.readAllLines</name>
                        <args>
                           <arg type="Ljava/nio/file/Path">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.startsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">charToIdxMap</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.containsKey</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="put">fileCharacters</op>
                     <op code="call">
                        <name>java.util.Arrays.copyOfRange</name>
                        <args>
                           <arg type="[CII">?</arg>
                        </args>
                     </op>
                     <op code="put">fileCharacters</op>
                     <op code="get">fileCharacters</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">fileCharacters</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalArgumentException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">fileCharacters</op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">fileCharacters</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.initializeOffsets</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()[C"
                       name="getMinimalCharacterSet"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>C</return>
                  <ops>
                     <op code="call">
                        <name>java.util.LinkedList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.charValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()[C"
                       name="getDefaultCharacterSet"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>C</return>
                  <ops>
                     <op code="call">
                        <name>java.util.LinkedList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.getMinimalCharacterSet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Character.charValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)C"
                       name="convertIndexToCharacter"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>C</return>
                  <ops>
                     <op code="get">validCharacters</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(C)I"
                       name="convertCharacterToIndex"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="C">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get">charToIdxMap</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()C"
                       name="getRandomCharacter"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>C</return>
                  <ops>
                     <op code="get">validCharacters</op>
                     <op code="get">rng</op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">validCharacters</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">miniBatchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.NoSuchElementException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">validCharacters</op>
                     <op code="get">exampleLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="get">validCharacters</op>
                     <op code="get">exampleLength</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.removeFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">exampleLength</op>
                     <op code="get">charToIdxMap</op>
                     <op code="get">fileCharacters</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">charToIdxMap</op>
                     <op code="get">fileCharacters</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">fileCharacters</op>
                     <op code="get">miniBatchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">validCharacters</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">validCharacters</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.clear</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.initializeOffsets</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="initializeOffsets"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">fileCharacters</op>
                     <op code="get">exampleLength</op>
                     <op code="get">exampleStartOffsets</op>
                     <op code="get">exampleLength</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.LinkedList.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">exampleStartOffsets</op>
                     <op code="get">rng</op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">miniBatchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="cursor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">exampleStartOffsets</op>
                     <op code="call">
                        <name>java.util.LinkedList.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="numExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="remove"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec">
         <class id="Word2VecRawTextExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.minWordFrequency</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.layerSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.windowSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.wordsNearestSum</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecRawTextExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="Word2VecUptrainingExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.inmemory.AbstractCache.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.vectorLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.useAdaGrad</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.cache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.minWordFrequency</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.epochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.layerSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.windowSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.lookupTable</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/WeightLookupTable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.vocabCache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.wordsNearest</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.writeWord2VecModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/Word2Vec">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.readWord2VecModel</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.setTokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.setSentenceIterator</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.Word2Vec.wordsNearestSum</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.word2vec.Word2VecUptrainingExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.densenet">
         <class id="DenseNetMain"><!--Package: org.deeplearning4j.examples.advanced.modelling.densenet; name: org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain; file: org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">MODEL_PATH</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/datavec/api/split/InputSplit">trainingData</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/datavec/api/split/InputSplit">validationData</attribute>
               <attribute final="true" public="false" static="true" type="I">height</attribute>
               <attribute final="true" public="false" static="true" type="I">width</attribute>
               <attribute final="true" public="false" static="true" type="I">channels</attribute>
               <attribute final="true" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="true" public="false" static="true" type="I">outputNum</attribute>
               <attribute final="true" public="false" static="true" type="I">numEpochs</attribute>
               <attribute final="true" public="false" static="true" type="D">splitTrainTest</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.ANIMALS</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.datavec.image.loader.NativeImageLoader.ALLOWED_FORMATS</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.io.labels.ParentPathLabelGenerator.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.io.filters.BalancedPathFilter.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="Lorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.sample</name>
                        <args>
                           <arg type="Lorg/datavec/api/io/filters/PathFilter">?</arg>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.trainingData</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.validationData</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.model.DenseNetModel.buildNetwork</name>
                        <args>
                           <arg type="JIIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.setListeners</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization">?</arg>
                           <arg type="Lorg/datavec/api/io/labels/ParentPathLabelGenerator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.trainData</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization">?</arg>
                           <arg type="Lorg/datavec/api/io/labels/ParentPathLabelGenerator">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/datavec/image/transform/ImageTransform;"
                       name="getImageTransform"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Lorg/datavec/image/transform/ImageTransform</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.BlurTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.NoiseTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.transform.ShowImageTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.asList</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.transform.PipelineImageTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization;Lorg/datavec/api/io/labels/ParentPathLabelGenerator;Lorg/deeplearning4j/nn/graph/ComputationGraph;)V"
                       name="trainData"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization">?</arg>
                     <arg type="Lorg/datavec/api/io/labels/ParentPathLabelGenerator">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.trainingData</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.getImageTransform</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/graph/ComputationGraph;Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization;Lorg/datavec/api/io/labels/ParentPathLabelGenerator;I)V"
                       name="setListeners"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/preprocessor/DataNormalization">?</arg>
                     <arg type="Lorg/datavec/api/io/labels/ParentPathLabelGenerator">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.trainingData</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.getImageTransform</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                           <arg type="[Lorg/nd4j/evaluation/IEvaluation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.validationData</op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                           <arg type="[Lorg/nd4j/evaluation/IEvaluation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.InMemoryStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.MODEL_PATH</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.CheckpointListener$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.CheckpointListener$Builder.keepAll</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.CheckpointListener$Builder.deleteExisting</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.CheckpointListener$Builder.saveEveryNEpochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.CheckpointListener$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.densenet.DenseNetMain.MODEL_PATH</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.advanced.modelling.melodl4j">
         <class id="MelodyStrings"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j; name: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings; file: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings-->
            <attributes>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">COMMENT_STRING</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">noteGapCharsPositive</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">noteGapCharsNegative</attribute>
               <attribute final="false" public="true" static="true" type="I">durationDeltaParts</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">durationChars</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">allValidCharacters</attribute>
               <attribute final="true" public="true" static="true" type="C">restChar</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getValidCharacters"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)Ljava/lang/String;"
                       name="convertToMelodyString"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.computeAverageDuration</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.durationDeltaParts</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getDurationInTicks</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.computeDurationChar</name>
                        <args>
                           <arg type="JD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.computeDurationChar</name>
                        <args>
                           <arg type="JD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.getCharForPitchGap</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getDurationInTicks</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.computeDurationChar</name>
                        <args>
                           <arg type="JD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)C"
                       name="getCharForPitchGap"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>C</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(JD)C"
                       name="computeDurationChar"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="J">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>C</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Math.round</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)D"
                       name="computeAverageDuration"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getDurationInTicks</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.durationDeltaParts</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.getValidCharacters</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.allValidCharacters</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MelodyModelingExample"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j; name: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample; file: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">inputSymbolicMelodiesFilename</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">tmpDir</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">symbolicMelodiesInputFilePath</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">composedMelodiesOutputFilePath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.tmpDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.getMidiIterator</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.sampleCharactersFromNetwork</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelody</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.BackpropType.TruncatedBPTT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.backpropType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/BackpropType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTForwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTBackwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.learn</name>
                        <args>
                           <arg type="IIIIIILjava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="JLorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;)V"
                       name="save"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.ObjectOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/OutputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.ObjectOutputStream.writeObject</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.ObjectOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(IIIIIILjava/lang/String;Ljava/util/Random;JLorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration;)V"
                       name="learn"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="J">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayers</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.sampleCharactersFromNetwork</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelody</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.lastIndexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.composedMelodiesOutputFilePath</op>
                     <op code="call">
                        <name>java.io.PrintWriter.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintWriter.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintWriter.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="makeSureFileIsInTmpDir"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.tmpDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.copyURLToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;"
                       name="getMidiIterator"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.makeSureFileIsInTmpDir</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.allValidCharacters</op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.symbolicMelodiesInputFilePath</op>
                     <op code="call">
                        <name>java.nio.charset.Charset.forName</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                           <arg type="II[CLjava/util/Random">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator;Ljava/util/Random;II)[Ljava/lang/String;"
                       name="sampleCharactersFromNetwork"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/advanced/modelling/charmodelling/utils/CharacterIterator">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.getRandomCharacter</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertCharacterToIndex</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.tensorAlongDimension</name>
                        <args>
                           <arg type="J[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.sampleFromDistribution</name>
                        <args>
                           <arg type="[DLjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.charmodelling.utils.CharacterIterator.convertIndexToCharacter</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([DLjava/util/Random;)I"
                       name="sampleFromDistribution"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalArgumentException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.tmpDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.tmpDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.symbolicMelodiesInputFilePath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.tmpDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyModelingExample.composedMelodiesOutputFilePath</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="Note"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j; name: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note; file: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note-->
            <attributes>
               <attribute final="true" public="false" static="false" type="I">pitch</attribute>
               <attribute final="true" public="false" static="false" type="J">startTick</attribute>
               <attribute final="false" public="false" static="false" type="J">endTick</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/lang/Integer">instrument</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/Integer">channel</attribute>
               <attribute final="true" public="false" static="false" type="I">velocity</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(IJIII)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="J">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">pitch</op>
                     <op code="put">startTick</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="put">instrument</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="put">channel</op>
                     <op code="put">velocity</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="toString"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">pitch</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">startTick</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">endTick</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">instrument</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="get">instrument</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">velocity</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()J"
                       name="getEndTick"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>J</return>
                  <ops>
                     <op code="get">endTick</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(J)V"
                       name="setEndTick"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="J">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">endTick</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getPitch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">pitch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getNoteValueInScale"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">pitch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()J"
                       name="getStartTick"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>J</return>
                  <ops>
                     <op code="get">startTick</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(D)D"
                       name="getStartSeconds"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(D)D"
                       name="getEndSeconds"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getInstrument"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">instrument</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getChannel"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getVelocity"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">velocity</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()J"
                       name="getDurationInTicks"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>J</return>
                  <ops>
                     <op code="get">endTick</op>
                     <op code="get">startTick</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;)I"
                       name="compareTo"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get">startTick</op>
                     <op code="get">startTick</op>
                     <op code="get">pitch</op>
                     <op code="get">pitch</op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/Object;)Z"
                       name="equals"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/Object">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="get">startTick</op>
                     <op code="get">startTick</op>
                     <op code="get">pitch</op>
                     <op code="get">pitch</op>
                     <op code="get">channel</op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>com.google.common.base.Objects.equal</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="hashCode"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">startTick</op>
                     <op code="call">
                        <name>java.lang.Long.valueOf</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get">pitch</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>com.google.common.base.Objects.hashCode</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljavax/sound/midi/Track;)V"
                       name="addMidiEvents"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljavax/sound/midi/Track">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">pitch</op>
                     <op code="get">velocity</op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.&lt;init&gt;</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">startTick</op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiMessage">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Track.add</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiEvent">?</arg>
                        </args>
                     </op>
                     <op code="get">channel</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">pitch</op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.&lt;init&gt;</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get">endTick</op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiMessage">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Track.add</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiEvent">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(D)D"
                       name="getDurationInSeconds"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="get">endTick</op>
                     <op code="get">startTick</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/Integer;)V"
                       name="setChannel"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/Integer">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">channel</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="PlayMelodyStrings"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j; name: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings; file: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/Random">random</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">tempDir</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/Map">instrumentsByName</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/regex/Pattern">INSTRUMENT_PATTERN</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/util/regex/Pattern">START_NOTE_PATTERN</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="[Ljava/lang/String">programs</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/text/NumberFormat">numberFormat</attribute>
               <attribute final="false" public="false" static="true" type="Z">soundBackLoaded</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)I"
                       name="getInstrument"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.instrumentsByName</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;D)V"
                       name="playMelodies"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelodies</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ID">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;ID)V"
                       name="playMelodies"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.InputStreamReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/Reader">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.readLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.trim</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.startsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrumentNumberFromLine</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getStartNoteFromLine</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelody</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;I)I"
                       name="getInstrumentNumberFromLine"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.INSTRUMENT_PATTERN</op>
                     <op code="call">
                        <name>java.util.regex.Pattern.matcher</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.regex.Matcher.find</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.regex.Matcher.group</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;I)I"
                       name="getStartNoteFromLine"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.START_NOTE_PATTERN</op>
                     <op code="call">
                        <name>java.util.regex.Pattern.matcher</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.regex.Matcher.find</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.regex.Matcher.group</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(J)V"
                       name="sleep"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="J">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Thread.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Thread.interrupted</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="chooseRandomInstrumentPop"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.random</op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="chooseRandomInstrumentClassical"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.random</op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getInstrument</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(CI)I"
                       name="getDurationInTicks"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="C">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(C)I"
                       name="getPitchDelta"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="C">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(C)Z"
                       name="isDurationChar"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="C">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(C)Z"
                       name="isPitchChar"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="C">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.isDurationChar</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;D)V"
                       name="playMelody"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelody</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IID">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;II)Ljava/util/List;"
                       name="createNoteSequence"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.isDurationChar</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.&lt;init&gt;</name>
                        <args>
                           <arg type="IJIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getDurationInTicks</name>
                        <args>
                           <arg type="CI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.isDurationChar</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getDurationInTicks</name>
                        <args>
                           <arg type="CI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.isPitchChar</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getPitchDelta</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.isDurationChar</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getDurationInTicks</name>
                        <args>
                           <arg type="CI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.&lt;init&gt;</name>
                        <args>
                           <arg type="IJIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;IID)V"
                       name="playMelody"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.loadSoundBank</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.createNoteSequence</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiSystem.getSequencer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.makeSequence</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setSequence</name>
                        <args>
                           <arg type="Ljavax/sound/midi/Sequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.getTickLength</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setTickPosition</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.open</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setTempoFactor</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.getTickPosition</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.stop</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljavax/sound/midi/Sequence;D)V"
                       name="playSequence"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljavax/sound/midi/Sequence">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.loadSoundBank</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiSystem.getSequencer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setSequence</name>
                        <args>
                           <arg type="Ljavax/sound/midi/Sequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setTickPosition</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.open</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.setTempoFactor</name>
                        <args>
                           <arg type="F">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequencer.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;I)Ljavax/sound/midi/Sequence;"
                       name="makeSequence"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljavax/sound/midi/Sequence</return>
                  <ops>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.&lt;init&gt;</name>
                        <args>
                           <arg type="FI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.createTrack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.&lt;init&gt;</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiMessage">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Track.add</name>
                        <args>
                           <arg type="Ljavax/sound/midi/MidiEvent">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.addMidiEvents</name>
                        <args>
                           <arg type="Ljavax/sound/midi/Track">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="loadSoundBank"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.soundBackLoaded</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.soundBackLoaded</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.tempDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.copyURLContentsToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiSystem.getSynthesizer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiSystem.getSoundbank</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Synthesizer.loadAllInstruments</name>
                        <args>
                           <arg type="Ljavax/sound/midi/Soundbank">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getPathToExampleMelodiesFile"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.tempDir</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.copyURLContentsToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/net/URL;Ljava/io/File;)V"
                       name="copyURLContentsToFile"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/net/URL">?</arg>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.net.URL.openStream</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedInputStream.read</name>
                        <args>
                           <arg type="[B">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.write</name>
                        <args>
                           <arg type="[BII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedInputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.numberFormat</op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main1"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getPathToExampleMelodiesFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.getPathToExampleMelodiesFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.playMelodies</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.random</op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.tempDir</op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.instrumentsByName</op>
                     <op code="call">
                        <name>java.util.regex.Pattern.compile</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.INSTRUMENT_PATTERN</op>
                     <op code="call">
                        <name>java.util.regex.Pattern.compile</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.START_NOTE_PATTERN</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="call">
                        <name>java.text.NumberFormat.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.numberFormat</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.instrumentsByName</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.numberFormat</op>
                     <op code="call">
                        <name>java.text.NumberFormat.setMaximumFractionDigits</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.soundBackLoaded</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MidiMelodyExtractor"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j; name: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor; file: org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">combineSamePitchNotes</attribute>
               <attribute final="false" public="true" static="true" type="Z">skipBassesForMelody</attribute>
               <attribute final="false" public="true" static="true" type="I">minSizeInNotesOfMelody</attribute>
               <attribute final="false" public="true" static="true" type="I">minDistinctPitches</attribute>
               <attribute final="false" public="true" static="true" type="Z">useStrictOverlap</attribute>
               <attribute final="false" public="true" static="true" type="D">maximumProportionOfOverlapBeforeNotesAreConsideredInHarmony</attribute>
               <attribute final="false" public="true" static="true" type="D">minimumDurationInSecondsOfNoteToIncludeInImageOutput</attribute>
               <attribute final="false" public="true" static="true" type="D">maxProportionOfRepeatsOfPreviousNote</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">tmpDirPath</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">subDirectoryName</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">midiImageSubdirectory</attribute>
               <attribute final="true" public="true" static="true" type="Ljava/io/File">imageDirectoryFile</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">DEFAULT_OUTPUT_DIRECTORY_PATH</attribute>
               <attribute final="false" public="false" static="true" type="Z">extractMelodyFromPolyphonicNoteList</attribute>
               <attribute final="true" public="false" static="true" type="I">PERCUSSION_CHANNEL</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/text/NumberFormat">numberFormat</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">path</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljavax/sound/midi/Sequence">sequence</attribute>
               <attribute final="true" public="false" static="false" type="[I">countOfNoteInstancesPerTrack</attribute>
               <attribute final="true" public="false" static="false" type="[I">countPolyphonyPerTrack</attribute>
               <attribute final="false" public="false" static="false" type="I">maxChannelNumber</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="[Ljavax/sound/midi/Track">tracks</attribute>
               <attribute final="false" public="false" static="false" type="I">totalNotesInstances</attribute>
               <attribute final="false" public="false" static="false" type="I">totalNotesInstancesTreatedAsDifferent</attribute>
               <attribute final="false" public="false" static="false" type="I">countOfTrackChannelInstrumentNoteSequences</attribute>
               <attribute final="false" public="false" static="false" type="I">countMelodies</attribute>
               <attribute final="false" public="false" static="true" type="I">countOfNotesSkippedToTheirBeingShort</attribute>
               <attribute final="false" public="false" static="true" type="I">totalCountOfMelodies</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">setOfPitchesPerTrack</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">perTrackMapFromChannelToTickToInstrument</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">perTrackMapFromChannelToInstrumentToListOfNotes</attribute>
               <attribute final="false" public="false" static="true" type="I">totalCountPolyphonicNoteLists</attribute>
               <attribute final="false" public="false" static="true" type="I">totalCountMonophonicNoteLists</attribute>
               <attribute final="false" public="false" static="true" type="I">totalCountOfUnEndedNotes</attribute>
               <attribute final="false" public="false" static="true" type="I">couldFindStartNoteCount</attribute>
               <attribute final="false" public="false" static="true" type="I">couldntFindStartNoteCount</attribute>
               <attribute final="false" public="false" static="true" type="I">countMidiFiles</attribute>
               <attribute final="false" public="false" static="true" type="I">countWarnings</attribute>
               <attribute final="false" public="false" static="true" type="I">countMelodiesRejectedDueTooFewDistinctPitches</attribute>
               <attribute final="false" public="false" static="true" type="I">countMelodiesRejectedDueTooManyRepeatsOfPreviousNote</attribute>
               <attribute final="false" public="false" static="true" type="I">countOfNotesTruncatedDueToLooseOverlapping</attribute>
               <attribute final="false" public="false" static="true" type="I">countOfShortenedNotes</attribute>
               <attribute final="true" public="false" static="true" type="Z">$assertionsDisabled</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/io/File;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">maxChannelNumber</op>
                     <op code="put">totalNotesInstances</op>
                     <op code="put">totalNotesInstancesTreatedAsDifferent</op>
                     <op code="put">countOfTrackChannelInstrumentNoteSequences</op>
                     <op code="put">countMelodies</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">setOfPitchesPerTrack</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">perTrackMapFromChannelToTickToInstrument</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">perTrackMapFromChannelToInstrumentToListOfNotes</op>
                     <op code="call">
                        <name>javax.sound.midi.MidiSystem.getSequence</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put">sequence</op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">path</op>
                     <op code="get">sequence</op>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.getTracks</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">tracks</op>
                     <op code="get">tracks</op>
                     <op code="put">countOfNoteInstancesPerTrack</op>
                     <op code="get">tracks</op>
                     <op code="put">countPolyphonyPerTrack</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.processTracks</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.shortenNotesThatOverlapTheSubsequentNoteLessThanMaximumProportionOfOverlapBeforeNotesAreConsideredInHarmony</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="shortenNotesThatOverlapTheSubsequentNoteLessThanMaximumProportionOfOverlapBeforeNotesAreConsideredInHarmony"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.maximumProportionOfOverlapBeforeNotesAreConsideredInHarmony</op>
                     <op code="get">perTrackMapFromChannelToInstrumentToListOfNotes</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.values</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collection.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.values</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collection.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.overlapProportion</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.maximumProportionOfOverlapBeforeNotesAreConsideredInHarmony</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfShortenedNotes</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfShortenedNotes</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/PrintStream;)V"
                       name="printMelodies"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/PrintStream">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">perTrackMapFromChannelToInstrumentToListOfNotes</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">perTrackMapFromChannelToInstrumentToListOfNotes</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.programs</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.skipBassesForMelody</op>
                     <op code="call">
                        <name>java.lang.String.contains</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.contains</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.noteListIsTooBoring</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.computePolyphony</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountPolyphonicNoteLists</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountPolyphonicNoteLists</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.extractMelodyFromPolyphonicNoteList</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.extractMonophonicMelodyFromPolyphonicNoteList</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountMonophonicNoteLists</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountMonophonicNoteLists</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MelodyStrings.convertToMelodyString</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get">countMelodies</op>
                     <op code="put">countMelodies</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfMelodies</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfMelodies</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)D"
                       name="proportionOfNotesThatAreRepeatsOfPreviousNote"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)Ljava/util/List;"
                       name="extractMonophonicMelodyFromPolyphonicNoteList"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.contains</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesTruncatedDueToLooseOverlapping</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesTruncatedDueToLooseOverlapping</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.addOverlappedNotesToNotesToSkip</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="ILjava/util/Set">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;ILjava/util/Set;)V"
                       name="addOverlappedNotesToNotesToSkipNonStrict"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.$assertionsDisabled</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.AssertionError.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;ILjava/util/Set;)V"
                       name="addOverlappedNotesToNotesToSkipStrict"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.$assertionsDisabled</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.AssertionError.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;ILjava/util/Set;)V"
                       name="addOverlappedNotesToNotesToSkip"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.useStrictOverlap</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.addOverlappedNotesToNotesToSkipStrict</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="ILjava/util/Set">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.addOverlappedNotesToNotesToSkipNonStrict</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="ILjava/util/Set">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)Z"
                       name="noteListIsTooBoring"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.minSizeInNotesOfMelody</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countDistinctPitches</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.minDistinctPitches</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooFewDistinctPitches</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooFewDistinctPitches</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.proportionOfNotesThatAreRepeatsOfPreviousNote</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.maxProportionOfRepeatsOfPreviousNote</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooManyRepeatsOfPreviousNote</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooManyRepeatsOfPreviousNote</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)I"
                       name="countDistinctPitches"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="call">
                        <name>java.util.TreeSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/PrintStream;)V"
                       name="printAnalysis"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/PrintStream">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">path</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">tracks</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">totalNotesInstances</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">totalNotesInstancesTreatedAsDifferent</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">sequence</op>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.getResolution</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">sequence</op>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.getMicrosecondLength</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">sequence</op>
                     <op code="call">
                        <name>javax.sound.midi.Sequence.getTickLength</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">countOfTrackChannelInstrumentNoteSequences</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">countMelodies</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">tracks</op>
                     <op code="get">countOfNoteInstancesPerTrack</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">countOfNoteInstancesPerTrack</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">setOfPitchesPerTrack</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">countPolyphonyPerTrack</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">perTrackMapFromChannelToTickToInstrument</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="processTracks"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">tracks</op>
                     <op code="get">setOfPitchesPerTrack</op>
                     <op code="call">
                        <name>java.util.TreeSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">perTrackMapFromChannelToTickToInstrument</op>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">tracks</op>
                     <op code="get">tracks</op>
                     <op code="get">perTrackMapFromChannelToTickToInstrument</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Track.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.Track.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.getTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Long.valueOf</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getCommand</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">maxChannelNumber</op>
                     <op code="put">maxChannelNumber</op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getData1</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getData2</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">totalNotesInstances</op>
                     <op code="put">totalNotesInstances</op>
                     <op code="get">setOfPitchesPerTrack</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">countOfNoteInstancesPerTrack</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.floorEntry</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.combineSamePitchNotes</op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.doesAnyExistingActiveNoteHaveTheSameChannelAndPitch</name>
                        <args>
                           <arg type="IILjava/util/Set">?</arg>
                           <arg type="Ljava/lang/Long">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.getTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.&lt;init&gt;</name>
                        <args>
                           <arg type="IJIII">?</arg>
                        </args>
                     </op>
                     <op code="get">totalNotesInstancesTreatedAsDifferent</op>
                     <op code="put">totalNotesInstancesTreatedAsDifferent</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.deactivateAnyNotesWithSamePitchAndChannel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Ljava/util/Set">?</arg>
                           <arg type="Ljava/lang/Long">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.endNote</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="IILjava/lang/Long">?</arg>
                           <arg type="ILjava/util/Set">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getData1</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.endNote</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="IILjava/lang/Long">?</arg>
                           <arg type="ILjava/util/Set">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.ShortMessage.getData1</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.getTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Long.valueOf</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">path</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.sound.midi.MidiEvent.getTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countWarnings</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countWarnings</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfUnEndedNotes</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfUnEndedNotes</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/MidiMelodyExtractor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.sort</name>
                        <args>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="get">countPolyphonyPerTrack</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.computePolyphony</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.makeMapFromChannelToInstrumentToListOfNotes</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get">perTrackMapFromChannelToInstrumentToListOfNotes</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/Set;Ljava/lang/Long;)V"
                       name="deactivateAnyNotesWithSamePitchAndChannel"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                     <arg type="Ljava/lang/Long">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="call">
                        <name>java.lang.Long.longValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.remove</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(IILjava/util/Set;Ljava/lang/Long;)Z"
                       name="doesAnyExistingActiveNoteHaveTheSameChannelAndPitch"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                     <arg type="Ljava/lang/Long">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)Ljava/util/TreeMap;"
                       name="makeMapFromChannelToInstrumentToListOfNotes"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Ljava/util/TreeMap</return>
                  <ops>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getInstrument</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">countOfTrackChannelInstrumentNoteSequences</op>
                     <op code="put">countOfTrackChannelInstrumentNoteSequences</op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)Z"
                       name="isSortedByStartTick"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;)I"
                       name="computePolyphony"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>I</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.$assertionsDisabled</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.isSortedByStartTick</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.AssertionError.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.overlapsANoteWithAHigherNoteIndexStrict</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;)D"
                       name="overlapProportion"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                  </args>
                  <return>D</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;)Z"
                       name="overlapsStrict"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;)Z"
                       name="overlapsLoose"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note;Ljava/util/List;I)Z"
                       name="overlapsANoteWithAHigherNoteIndexStrict"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/melodl4j/Note">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.$assertionsDisabled</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.AssertionError.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;IILjava/lang/Long;ILjava/util/Set;)J"
                       name="endNote"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/Long">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Set">?</arg>
                  </args>
                  <return>J</return>
                  <ops>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getChannel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getPitch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getEndTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Long.longValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.setEndTick</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.remove</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">path</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="call">
                        <name>java.lang.Long.longValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.Note.getStartTick</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;Ljava/io/PrintStream;Ljava/io/PrintStream;)V"
                       name="processRecursively"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                     <arg type="Ljava/io/PrintStream">?</arg>
                     <arg type="Ljava/io/PrintStream">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.isDirectory</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.processRecursively</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/io/PrintStream">?</arg>
                           <arg type="Ljava/io/PrintStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toLowerCase</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.endsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.endsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.printAnalysis</name>
                        <args>
                           <arg type="Ljava/io/PrintStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.printMelodies</name>
                        <args>
                           <arg type="Ljava/io/PrintStream">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMidiFiles</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMidiFiles</op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"
                       name="processDirectoryAndWriteMelodyAndAnalysisFiles"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/OutputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.FileOutputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/OutputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.processRecursively</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/io/PrintStream">?</arg>
                           <arg type="Ljava/io/PrintStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.numberFormat</op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfUnEndedNotes</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMidiFiles</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countWarnings</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.numberFormat</op>
                     <op code="call">
                        <name>java.text.NumberFormat.format</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooFewDistinctPitches</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooManyRepeatsOfPreviousNote</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountPolyphonicNoteLists</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountMonophonicNoteLists</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfMelodies</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesSkippedToTheirBeingShort</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesTruncatedDueToLooseOverlapping</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfShortenedNotes</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;)Z"
                       name="directoryIsEmpty"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.isDirectory</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="checkForDirectoryAndTryToDownloadToTmpDirAndUnzip"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.directoryIsEmpty</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.PlayMelodyStrings.copyURLContentsToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.util.ArchiveUtils.unzipFileTo</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.delete</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.err</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.getMessage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.checkForDirectoryAndTryToDownloadToTmpDirAndUnzip</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.DEFAULT_OUTPUT_DIRECTORY_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.DEFAULT_OUTPUT_DIRECTORY_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.processDirectoryAndWriteMelodyAndAnalysisFiles</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Class.desiredAssertionStatus</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.$assertionsDisabled</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.combineSamePitchNotes</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.skipBassesForMelody</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.minSizeInNotesOfMelody</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.minDistinctPitches</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.useStrictOverlap</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.maximumProportionOfOverlapBeforeNotesAreConsideredInHarmony</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.minimumDurationInSecondsOfNoteToIncludeInImageOutput</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.maxProportionOfRepeatsOfPreviousNote</op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.imageDirectoryFile</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.imageDirectoryFile</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.tmpDirPath</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.DEFAULT_OUTPUT_DIRECTORY_PATH</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.extractMelodyFromPolyphonicNoteList</op>
                     <op code="call">
                        <name>java.text.NumberFormat.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.numberFormat</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesSkippedToTheirBeingShort</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfMelodies</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountPolyphonicNoteLists</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountMonophonicNoteLists</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.totalCountOfUnEndedNotes</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldFindStartNoteCount</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.couldntFindStartNoteCount</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMidiFiles</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countWarnings</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooFewDistinctPitches</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countMelodiesRejectedDueTooManyRepeatsOfPreviousNote</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfNotesTruncatedDueToLooseOverlapping</op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.countOfShortenedNotes</op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.melodl4j.MidiMelodyExtractor.numberFormat</op>
                     <op code="call">
                        <name>java.text.NumberFormat.setMaximumFractionDigits</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.userinterface.util">
         <class id="UIExampleUtils"><!--Package: org.deeplearning4j.examples.quickstart.features.userinterface.util; name: org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils; file: org.deeplearning4j.examples.quickstart.features.userinterface.util.UIExampleUtils-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="getMnistNetwork"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="getMnistData"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.transferlearning.iterators">
         <class id="FlowerDataSetIteratorFeaturized"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.iterators; name: org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized; file: org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">featureExtractorLayer</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="trainIterator"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.runFeaturize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.featureExtractorLayer</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.ExistingMiniBatchDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.AsyncDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="testIterator"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.featureExtractorLayer</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.ExistingMiniBatchDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.AsyncDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="runFeaturize"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.featureExtractorLayer</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.isFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.presave.FeaturizedPreSave.main</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.log</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIteratorFeaturized.featureExtractorLayer</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="FlowerDataSetIterator"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.iterators; name: org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator; file: org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">DATA_DIR</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">DATA_URL</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">FLOWER_DIR</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="[Ljava/lang/String">allowedExtensions</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/util/Random">rng</attribute>
               <attribute final="true" public="false" static="true" type="I">height</attribute>
               <attribute final="true" public="false" static="true" type="I">width</attribute>
               <attribute final="true" public="false" static="true" type="I">channels</attribute>
               <attribute final="true" public="false" static="true" type="I">numClasses</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/datavec/api/io/labels/ParentPathLabelGenerator">labelMaker</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/datavec/api/split/InputSplit">trainData</attribute>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/datavec/api/split/InputSplit">testData</attribute>
               <attribute final="false" public="false" static="true" type="I">batchSize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="trainIterator"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainData</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.makeIterator</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="testIterator"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testData</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.makeIterator</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)V"
                       name="setup"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.downloadAndUntar</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.IOException.printStackTrace</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.error</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.batchSize</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.FLOWER_DIR</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.allowedExtensions</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.rng</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.rng</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.allowedExtensions</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.labelMaker</op>
                     <op code="call">
                        <name>org.datavec.api.io.filters.BalancedPathFilter.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Lorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalArgumentException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.sample</name>
                        <args>
                           <arg type="Lorg/datavec/api/io/filters/PathFilter">?</arg>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainData</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testData</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/datavec/api/split/InputSplit;)Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="makeIterator"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.labelMaker</op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.VGG16ImagePreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="downloadAndUntar"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.DATA_DIR</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.DATA_DIR</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.isFile</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.copyURLToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.util.ArchiveUtils.unzipFileTo</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.DATA_DIR</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.DATA_DIR</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.FLOWER_DIR</op>
                     <op code="get_static">org.datavec.image.loader.BaseImageLoader.ALLOWED_FORMATS</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.allowedExtensions</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.rng</op>
                     <op code="call">
                        <name>org.datavec.api.io.labels.ParentPathLabelGenerator.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.labelMaker</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec">
         <class id="SentimentExampleIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator; file: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">wordVectors</attribute>
               <attribute final="true" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="true" public="false" static="false" type="I">vectorSize</attribute>
               <attribute final="true" public="false" static="false" type="I">truncateLength</attribute>
               <attribute final="false" public="false" static="false" type="I">cursor</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="[Ljava/io/File">positiveFiles</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="[Ljava/io/File">negativeFiles</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors;IIZ)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">cursor</op>
                     <op code="put">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.vocab</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.wordAtIndex</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">vectorSize</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">positiveFiles</op>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">negativeFiles</op>
                     <op code="put">wordVectors</op>
                     <op code="put">truncateLength</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">tokenizerFactory</op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">cursor</op>
                     <op code="get">positiveFiles</op>
                     <op code="get">negativeFiles</op>
                     <op code="call">
                        <name>java.util.NoSuchElementException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.nextDataSet</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="nextDataSet"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">cursor</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">cursor</op>
                     <op code="get">cursor</op>
                     <op code="get">positiveFiles</op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">cursor</op>
                     <op code="get">negativeFiles</op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">cursor</op>
                     <op code="put">cursor</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.hasWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.max</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">truncateLength</op>
                     <op code="get">truncateLength</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">vectorSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>java.util.List.subList</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVectors</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.assign</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">positiveFiles</op>
                     <op code="get">negativeFiles</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">vectorSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">cursor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Arrays.asList</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">cursor</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="remove"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Ljava/lang/String;"
                       name="loadReviewToString"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="get">positiveFiles</op>
                     <op code="get">negativeFiles</op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Z"
                       name="isPositiveReview"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="loadFeaturesFromFile"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.loadFeaturesFromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;I)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="loadFeaturesFromString"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.hasWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">vectorSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">wordVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.wordvectors.WordVectors.getWordVectorMatrix</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ImdbReviewClassificationRNN"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN; file: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN-->
            <attributes>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">DATA_URL</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">DATA_PATH</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">wordVectorsPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.lang.String.startsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.checkDownloadW2VECModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.downloadData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getMemoryManager</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.memory.MemoryManager.setAutoGcWindow</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.loadStaticModel</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                           <arg type="IIZ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                           <arg type="IIZ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.SentimentExampleIterator.loadFeaturesFromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="downloadData"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.copyURLToFile</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DataUtilities.extractTarGz</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DataUtilities.extractTarGz</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="checkDownloadW2VECModel"
                       static="true"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.resources.Downloader.checkMD5OfFile</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.in</op>
                     <op code="call">
                        <name>java.util.Scanner.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Scanner.nextLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.resources.Downloader.download</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ImdbReviewClassificationCNN"><!--Package: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec; name: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationCNN; file: org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationCNN-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.lang.String.startsWith</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.checkDownloadW2VECModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.downloadData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getMemoryManager</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.memory.MemoryManager.setAutoGcWindow</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.ConvolutionMode.Same</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.convolutionMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.MergeVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.poolingType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.dropOut</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.GlobalPoolingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getLayers</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.conf</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.Layer.getLayerName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.wordVectorsPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.loadStaticModel</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationCNN.getDataSetIterator</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                           <arg type="IILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationCNN.getDataSetIterator</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                           <arg type="IILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.readFileToString</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator.loadSingleSentence</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.outputSingle</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ZLorg/deeplearning4j/models/embeddings/wordvectors/WordVectors;IILjava/util/Random;)Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="getDataSetIterator"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Z">?</arg>
                     <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.textclassification.pretrainedword2vec.ImdbReviewClassificationRNN.DATA_PATH</op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Objects.requireNonNull</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.asList</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.listFiles</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Objects.requireNonNull</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Arrays.asList</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.provider.FileLabeledSentenceProvider.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Format.CNN2D</op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/iterator/CnnSentenceDataSetIterator$Format">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.sentenceProvider</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/iterator/LabeledSentenceProvider">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.wordVectors</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/wordvectors/WordVectors">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.minibatchSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.maxSentenceLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.useNormalizedWordVectors</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.iterator.CnnSentenceDataSetIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors">
         <class id="ParagraphVectorsTextExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.inmemory.AbstractCache.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.LabelsSource.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.minWordFrequency</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.iterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.epochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.layerSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.labelsSource</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/documentiterator/LabelsSource">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.windowSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.trainWordVectors</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.vocabCache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.sampling</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.similarity</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.similarity</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.similarity</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.similarity</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsTextExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ParagraphVectorsClassifierExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/paragraphvectors/ParagraphVectors">paragraphVectors</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/documentiterator/LabelAwareIterator">iterator</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.dataLocalPath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.makeParagraphVectors</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.checkUnlabeledData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="makeParagraphVectors"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.addSourceFolder</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iterator</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">tokenizerFactory</op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.minLearningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.batchSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.epochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">iterator</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/documentiterator/LabelAwareIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.trainWordVectors</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">paragraphVectors</op>
                     <op code="get">paragraphVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="checkUnlabeledData"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.addSourceFolder</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">paragraphVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.getLookupTable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.MeansBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">?</arg>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="get">iterator</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.LabelAwareIterator.getLabelsSource</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.LabelsSource.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">paragraphVectors</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.getLookupTable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.LabelSeeker.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator.hasNextDocument</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.FileLabelAwareIterator.nextDocument</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.MeansBuilder.documentAsVector</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/documentiterator/LabelledDocument">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.LabelSeeker.getScores</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.LabelledDocument.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsClassifierExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ParagraphVectorsInferenceExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.WordVectorSerializer.readParagraphVectors</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.setTokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.getConfiguration</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.VectorsConfiguration.setIterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.inferVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.inferVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.paragraphvectors.ParagraphVectors.inferVector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample.log</op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.cosineSim</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample.log</op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.cosineSim</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.ParagraphVectorsInferenceExample.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck">
         <class id="EditAtBottleneckOthersFrozen"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck; name: org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen; file: org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true" public="false" static="true" type="I">numClasses</attribute>
               <attribute final="true" public="false" static="true" type="J">seed</attribute>
               <attribute final="true" public="false" static="true" type="I">trainPerc</attribute>
               <attribute final="true" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">featureExtractionLayer</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16$VGG16Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.ZooModel.initPretrained</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.dropOut</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.fineTuneConfiguration</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/transferlearning/FineTuneConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setFeatureExtractor</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.nOutReplace</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="ILorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.removeVertexAndConnections</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.setup</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.editfrombottleneck.EditAtBottleneckOthersFrozen.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.feedforward.classification">
         <class id="MoonClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.CLASSIFICATIONDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.generateVisuals</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;)V"
                       name="generateVisuals"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.generatePointsOnGraph</name>
                        <args>
                           <arg type="DDDDI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTrainingData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.util.concurrent.TimeUnit.SECONDS</op>
                     <op code="call">
                        <name>java.util.concurrent.TimeUnit.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTestData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MoonClassifier.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="IrisClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.IrisClassifier; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.IrisClassifier-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="IC">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.IRISDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.shuffle</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.splitTestAndTrain</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTrain</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTest</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.IrisClassifier.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.IrisClassifier.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.IrisClassifier.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="SaturnClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier-->
            <attributes>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.CLASSIFICATIONDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.generateVisuals</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;)V"
                       name="generateVisuals"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.generatePointsOnGraph</name>
                        <args>
                           <arg type="DDDDI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTrainingData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.util.concurrent.TimeUnit.SECONDS</op>
                     <op code="call">
                        <name>java.util.concurrent.TimeUnit.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTestData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.SaturnClassifier.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MNISTSingleLayer"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTSingleLayer.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="LinearDataClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.CLASSIFICATIONDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.generateVisuals</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;)V"
                       name="generateVisuals"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                     <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.generatePointsOnGraph</name>
                        <args>
                           <arg type="DDDDI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTrainingData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.util.concurrent.TimeUnit.SECONDS</op>
                     <op code="call">
                        <name>java.util.concurrent.TimeUnit.sleep</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.PlotUtil.plotTestData</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.LinearDataClassifier.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MNISTDoubleLayer"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nadam.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.MNISTDoubleLayer.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="ModelXOR"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.ModelXOR; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.ModelXOR-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.ModelXOR.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.ModelXOR.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.biasInit</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.miniBatch</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.distribution.UniformDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/distribution/Distribution">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.distribution.UniformDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/distribution/Distribution">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.classification.ModelXOR.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.recurrent">
         <class id="MemorizeSequence"><!--Package: org.deeplearning4j.examples.quickstart.modeling.recurrent; name: org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence; file: org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence-->
            <attributes>
               <attribute final="true" public="false" static="true" type="[C">LEARNSTRING</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/util/List">LEARNSTRING_CHARS_LIST</attribute>
               <attribute final="true" public="false" static="true" type="I">HIDDEN_LAYER_WIDTH</attribute>
               <attribute final="true" public="false" static="true" type="I">HIDDEN_LAYER_CONT</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.LinkedHashSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.LinkedHashSet.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.addAll</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.biasInit</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.miniBatch</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.LinkedHashSet.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.LinkedHashSet.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.indexOf</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.indexOf</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>java.lang.Character.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.indexOf</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getExecutioner</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.impl.indexaccum.IMax.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ops.executioner.OpExecutioner.exec</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ops/IndexAccumulation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.MemorizeSequence.LEARNSTRING_CHARS_LIST</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="VideoFrameClassifier$VideoPreProcessor"><!--Package: org.deeplearning4j.examples.quickstart.modeling.recurrent; name: org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier$VideoPreProcessor; file: org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier$VideoPreProcessor-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSet;)V"
                       name="preProcess"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.divi</name>
                        <args>
                           <arg type="Ljava/lang/Number">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="UCISequenceClassification"><!--Package: org.deeplearning4j.examples.quickstart.modeling.recurrent; name: org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification; file: org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">baseDir</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">baseTrainDir</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">featuresDirTrain</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">labelsDirTrain</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">baseTestDir</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">featuresDirTest</attribute>
               <attribute final="false" public="false" static="true" type="Ljava/io/File">labelsDirTest</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.downloadUCIData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTrain</op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.SequenceRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTrain</op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.SequenceRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator$AlignmentMode.ALIGN_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="IIZLorg/deeplearning4j/datasets/datavec/SequenceRecordReaderDataSetIterator$AlignmentMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTest</op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.SequenceRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTest</op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.SequenceRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator$AlignmentMode.ALIGN_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="IIZLorg/deeplearning4j/datasets/datavec/SequenceRecordReaderDataSetIterator$AlignmentMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nadam.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="downloadUCIData"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseDir</op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.net.URL.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.IOUtils.toString</name>
                        <args>
                           <arg type="Ljava/net/URL">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseDir</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTrainDir</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTrain</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTrain</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTestDir</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTest</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTest</op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.replaceAll</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.shuffle</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTrain</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTrain</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTest</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTest</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getFirst</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.writeStringToFile</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.getSecond</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.writeStringToFile</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.log</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseDir</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTrainDir</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTrainDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTrain</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTrainDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTrain</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTestDir</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTestDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.featuresDirTest</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.baseTestDir</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.recurrent.UCISequenceClassification.labelsDirTest</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="VideoFrameClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.recurrent; name: org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier; file: org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier-->
            <attributes>
               <attribute final="true" public="true" static="true" type="I">N_VIDEOS</attribute>
               <attribute final="true" public="true" static="true" type="I">V_WIDTH</attribute>
               <attribute final="true" public="true" static="true" type="I">V_HEIGHT</attribute>
               <attribute final="true" public="true" static="true" type="I">V_NFRAMES</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.VIDEOEXAMPLE</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.AdaGrad.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.AdaGrad.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.AdaGrad.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.ClipElementWiseAbsoluteValue</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.RnnToCnnPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.inputPreProcessor</name>
                        <args>
                           <arg type="Ljava/lang/Integer">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/InputPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.CnnToFeedForwardPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.inputPreProcessor</name>
                        <args>
                           <arg type="Ljava/lang/Integer">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/InputPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.FeedForwardToRnnPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.inputPreProcessor</name>
                        <args>
                           <arg type="Ljava/lang/Integer">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/InputPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.BackpropType.TruncatedBPTT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.backpropType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/BackpropType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTForwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.tBPTTBackwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier.getDataSetIterator</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.saveBinary</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.toJson</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FileUtils.writeStringToFile</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier.evaluatePerformance</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                           <arg type="IILjava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;IILjava/lang/String;)V"
                       name="evaluatePerformance"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier.getDataSetIterator</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.evalTimeSeries</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;III)Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator;"
                       name="getDataSetIterator"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier.getFeaturesReader</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier.getLabelsReader</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="Lorg/datavec/api/records/reader/SequenceRecordReader">?</arg>
                           <arg type="IIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.recurrent.VideoFrameClassifier$VideoPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/quickstart/modeling/recurrent/VideoFrameClassifier$1">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.SequenceRecordReaderDataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.AsyncDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;II)Lorg/datavec/api/records/reader/SequenceRecordReader;"
                       name="getFeaturesReader"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/datavec/api/records/reader/SequenceRecordReader</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.set</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.set</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.set</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.set</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.conf.Configuration.set</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.codec.reader.NativeCodecRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.codec.reader.NativeCodecRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/conf/Configuration">?</arg>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;II)Lorg/datavec/api/records/reader/SequenceRecordReader;"
                       name="getLabelsReader"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/datavec/api/records/reader/SequenceRecordReader</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.NumberedFileInputSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVSequenceRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="RNNEmbedding"><!--Package: org.deeplearning4j.examples.quickstart.modeling.recurrent; name: org.deeplearning4j.examples.quickstart.modeling.recurrent.RNNEmbedding; file: org.deeplearning4j.examples.quickstart.modeling.recurrent.RNNEmbedding-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.RnnToFeedForwardPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.inputPreProcessor</name>
                        <args>
                           <arg type="Ljava/lang/Integer">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/InputPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.preprocessor.FeedForwardToRnnPreProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.inputPreProcessor</name>
                        <args>
                           <arg type="Ljava/lang/Integer">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/InputPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setInput</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setLabels</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.computeGradientAndScore</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.score</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.sequenceprediction">
         <class id="LotteryDataSetIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceprediction; name: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator; file: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/examples/advanced/modelling/sequenceprediction/BaseDataSetReader">recordReader</attribute>
               <attribute final="false" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/dataset/DataSet">last</attribute>
               <attribute final="false" public="false" static="false" type="Z">useCurrent</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;IZ)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCombinationDataSetReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCharacterSequenceDataSetReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put">recordReader</op>
                     <op code="put">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numInputs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numInputs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.UnsupportedOperationException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">useCurrent</op>
                     <op code="put">useCurrent</op>
                     <op code="get">last</op>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="LotteryCombinationDataSetReader"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceprediction; name: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCombinationDataSetReader; file: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCombinationDataSetReader-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/io/File;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.toPath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">filePath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCombinationDataSetReader.doInitialize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">currentCursor</op>
                     <op code="put">currentCursor</op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">currentCursor</op>
                     <op code="put">currentCursor</op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Ljava/lang/String;"
                       name="decorateRecordData"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.SimpleDateFormat.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.text.SimpleDateFormat.parse</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Date.getTime</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Exception.getCause</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.replace</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="LotteryCharacterSequenceDataSetReader"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceprediction; name: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCharacterSequenceDataSetReader; file: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCharacterSequenceDataSetReader-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/io/File;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.toPath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">filePath</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryCharacterSequenceDataSetReader.doInitialize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">currentCursor</op>
                     <op code="put">currentCursor</op>
                     <op code="call">
                        <name>java.lang.String.replaceAll</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="TrainLotteryModelSeqPrediction"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceprediction; name: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction; file: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="false" public="false" static="true" type="J">seed</attribute>
               <attribute final="false" public="false" static="true" type="I">numEpochs</attribute>
               <attribute final="false" public="false" static="true" type="Z">modelType</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.LOTTERYDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.batchSize</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.modelType</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.modelType</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.modelType</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.LotteryDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.getNetModel</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.numEpochs</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.modelType</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Boolean.valueOf</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForward</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Boolean.valueOf</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getInt</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.tensorAlongDimension</name>
                        <args>
                           <arg type="J[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[IF">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="getNetModel"
                       static="true"
                       visibility="private">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.trainingWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.inferenceWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.seed</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.rmsDecay</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.log</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.batchSize</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.seed</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.numEpochs</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceprediction.TrainLotteryModelSeqPrediction.modelType</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="BaseDataSetReader"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceprediction; name: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader; file: org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Iterator">iter</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/nio/file/Path">filePath</attribute>
               <attribute final="false" public="false" static="false" type="I">totalExamples</attribute>
               <attribute final="false" public="false" static="false" type="I">currentCursor</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="doInitialize"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">filePath</op>
                     <op code="get_static">java.nio.charset.StandardCharsets.UTF_8</op>
                     <op code="call">
                        <name>java.nio.file.Files.readAllLines</name>
                        <args>
                           <arg type="Ljava/nio/file/Path">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iter</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">totalExamples</op>
                     <op code="put">currentCursor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">iter</op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceprediction.BaseDataSetReader.doInitialize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">totalExamples</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised">
         <class id="MNISTAutoencoder$MNISTVisualizer"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer-->
            <attributes>
               <attribute final="false" public="false" static="false" type="D">imageScale</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">digits</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/lang/String">title</attribute>
               <attribute final="false" public="false" static="false" type="I">gridWidth</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(DLjava/util/List;Ljava/lang/String;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(DLjava/util/List;Ljava/lang/String;I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="D">?</arg>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">imageScale</op>
                     <op code="put">digits</op>
                     <op code="put">title</op>
                     <op code="put">gridWidth</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="visualize"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>javax.swing.JFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">title</op>
                     <op code="call">
                        <name>javax.swing.JFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setDefaultCloseOperation</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">gridWidth</op>
                     <op code="call">
                        <name>java.awt.GridLayout.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.setLayout</name>
                        <args>
                           <arg type="Ljava/awt/LayoutManager">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.getComponents</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JPanel.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.add</name>
                        <args>
                           <arg type="Ljava/awt/Component">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.setVisible</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JFrame.pack</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getComponents"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">digits</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.&lt;init&gt;</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.BufferedImage.getRaster</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.awt.image.WritableRaster.setSample</name>
                        <args>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.getImage</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">imageScale</op>
                     <op code="get">imageScale</op>
                     <op code="call">
                        <name>java.awt.Image.getScaledInstance</name>
                        <args>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.ImageIcon.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/awt/Image">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>javax.swing.JLabel.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljavax/swing/Icon">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MNISTAutoencoder"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder-->
            <attributes>
               <attribute final="false" public="true" static="true" type="Z">visualize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.AdaGrad.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.singletonList</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.splitTestAndTrain</name>
                        <args>
                           <arg type="ILjava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTrain</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTest</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.argMax</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="JZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.score</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.ImmutablePair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$1.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.values</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collection.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.sort</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getRight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getRight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder.visualize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.&lt;init&gt;</name>
                        <args>
                           <arg type="DLjava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder$MNISTVisualizer.visualize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.feedforward.unsupervised.MNISTAutoencoder.visualize</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer">
         <class id="CustomLayer"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/activations/IActivation">secondActivationFunction</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.FeedForwardLayer.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.FeedForwardLayer.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/FeedForwardLayer$Builder">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.access$000</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder">?</arg>
                        </args>
                     </op>
                     <op code="put">secondActivationFunction</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/activations/IActivation;"
                       name="getSecondActivationFunction"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/activations/IActivation</return>
                  <ops>
                     <op code="get">secondActivationFunction</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/activations/IActivation;)V"
                       name="setSecondActivationFunction"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/activations/IActivation">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">secondActivationFunction</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration;Ljava/util/Collection;ILorg/nd4j/linalg/api/ndarray/INDArray;ZLorg/nd4j/linalg/api/buffer/DataType;)Lorg/deeplearning4j/nn/api/Layer;"
                       name="instantiate"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                     <arg type="Ljava/util/Collection">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Z">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/api/Layer</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.setListeners</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.setIndex</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.setParamsViewArray</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.initializer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.ParamInitializer.init</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.setParamTable</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.setConf</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/api/ParamInitializer;"
                       name="initializer"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/api/ParamInitializer</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.params.DefaultParamInitializer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/nn/conf/inputs/InputType;)Lorg/deeplearning4j/nn/conf/memory/LayerMemoryReport;"
                       name="getMemoryReport"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/conf/memory/LayerMemoryReport</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getOutputType</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.initializer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.ParamInitializer.numParams</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getIUpdater</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.IUpdater.stateSize</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getIDropout</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.arrayElementsPerExample</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.arrayElementsPerExample</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">layerName</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.memory.LayerMemoryReport$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Class">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.memory.LayerMemoryReport$Builder.standardMemory</name>
                        <args>
                           <arg type="JJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.memory.LayerMemoryReport$Builder.workingMemory</name>
                        <args>
                           <arg type="JJJJ">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.memory.MemoryReport.CACHE_MODE_ALL_ZEROS</op>
                     <op code="get_static">org.deeplearning4j.nn.conf.memory.MemoryReport.CACHE_MODE_ALL_ZEROS</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.memory.LayerMemoryReport$Builder.cacheMemory</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.memory.LayerMemoryReport$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CustomLayer$Builder"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/activations/IActivation">secondActivationFunction</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.FeedForwardLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder;"
                       name="secondActivationFunction"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.fromString</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.secondActivationFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/activations/Activation;)Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder;"
                       name="secondActivationFunction"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.Activation.getActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">secondActivationFunction</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer;"
                       name="build"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$Builder">?</arg>
                           <arg type="Lorg/deeplearning4j/examples/advanced/features/customizingdl4j/layers/layer/CustomLayer$1">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CustomLayerImplementation"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration;Lorg/nd4j/linalg/api/buffer/DataType;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                     <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.BaseLayer.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/NeuralNetConfiguration">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="activate"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Z">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.preOutput</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.columns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.layerConf</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getActivationFn</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getSecondActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.getActivation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.getActivation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="isPretrainLayer"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr;)Lorg/nd4j/common/primitives/Pair;"
                       name="backpropGradient"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                     <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                  </args>
                  <return>Lorg/nd4j/common/primitives/Pair</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.preOutput</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.columns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.all</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.get</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayerImplementation.layerConf</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getActivationFn</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">conf</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer.getSecondActivationFunction</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.backprop</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.activations.IActivation.backprop</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">maskArray</op>
                     <op code="get">maskArray</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.muliColumnVector</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.gradient.DefaultGradient.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">gradientViews</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">input</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.gemm</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZZDD">?</arg>
                        </args>
                     </op>
                     <op code="get">gradientViews</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.sum</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.assign</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.gradient.Gradient.gradientForVariable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.gradient.Gradient.gradientForVariable</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">params</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mmul</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.transpose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.workspace.ArrayType.ACTIVATION_GRAD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.leverageTo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/workspace/ArrayType">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.inference">
         <class id="ParallelInferenceExample"><!--Package: org.deeplearning4j.examples.advanced.features.inference; name: org.deeplearning4j.examples.advanced.features.inference.ParallelInferenceExample; file: org.deeplearning4j.examples.advanced.features.inference.ParallelInferenceExample-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.parallelism.inference.InferenceMode.BATCHED</op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference$Builder.inferenceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/parallelism/inference/InferenceMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference$Builder.batchLimit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference$Builder.workers</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.parallelism.ParallelInference.output</name>
                        <args>
                           <arg type="[F">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection">
         <class id="SequenceAnomalyDetection"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection; name: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection; file: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection-->
            <attributes>
               <attribute final="false" public="false" static="true" type="I">trainBatchSize</attribute>
               <attribute final="false" public="false" static="true" type="I">testBatchSize</attribute>
               <attribute final="false" public="false" static="true" type="I">numEpochs</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.ANOMALYSEQUENCEDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.trainBatchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.testBatchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.inputColumns</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.totalOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.createModel</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.serializer.NormalizerSerializer.getDefault</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getAbsolutePath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.serializer.NormalizerSerializer.write</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/preprocessor/Normalizer">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.numEpochs</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.getCurrentLines</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.score</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Queue.poll</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.ImmutablePair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Comparator.comparing</name>
                        <args>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.sort</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Stack.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getLeft</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.tuple.Pair.getRight</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Stack.push</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Stack.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.util.Stack.pop</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(II)Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="createModel"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.trainingWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.inferenceWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.rmsDecay</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MSE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.trainBatchSize</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.testBatchSize</op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.SequenceAnomalyDetection.numEpochs</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="AnomalyDataSetIterator"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection; name: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator; file: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/examples/advanced/modelling/sequenceanomalydetection/AnomalyDataSetReader">recordReader</attribute>
               <attribute final="false" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/dataset/DataSet">last</attribute>
               <attribute final="false" public="false" static="false" type="Z">useCurrent</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">preProcessor</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="put">recordReader</op>
                     <op code="put">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">preProcessor</op>
                     <op code="get">preProcessor</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.DataSetPreProcessor.preProcess</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.totalExamples</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="inputColumns"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numInputs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numInputs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalOutcomes"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">last</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.numOutcomes</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">last</op>
                     <op code="put">useCurrent</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">batchSize</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">preProcessor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor</return>
                  <ops>
                     <op code="get">preProcessor</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">useCurrent</op>
                     <op code="put">useCurrent</op>
                     <op code="get">last</op>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/Queue;"
                       name="getCurrentLines"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/Queue</return>
                  <ops>
                     <op code="get">recordReader</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.currentLines</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="AnomalyDataSetReader"><!--Package: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection; name: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader; file: org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">skipNumLines</attribute>
               <attribute final="false" public="false" static="false" type="I">skipNumColumns</attribute>
               <attribute final="false" public="false" static="false" type="I">longestTimeSequence</attribute>
               <attribute final="false" public="false" static="false" type="I">shortest</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Iterator">iter</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/nio/file/Path">filePath</attribute>
               <attribute final="false" public="false" static="false" type="I">totalExamples</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Queue">currentLines</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/io/File;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">skipNumLines</op>
                     <op code="put">skipNumColumns</op>
                     <op code="put">longestTimeSequence</op>
                     <op code="put">shortest</op>
                     <op code="call">
                        <name>java.io.File.toPath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">filePath</op>
                     <op code="call">
                        <name>java.util.LinkedList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">currentLines</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.doInitialize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="doInitialize"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">filePath</op>
                     <op code="call">
                        <name>java.nio.charset.Charset.forName</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.nio.file.Files.readAllLines</name>
                        <args>
                           <arg type="Ljava/nio/file/Path">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="get">skipNumLines</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.replaceAll</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">currentLines</op>
                     <op code="call">
                        <name>java.util.Queue.offer</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">skipNumColumns</op>
                     <op code="get">longestTimeSequence</op>
                     <op code="get">longestTimeSequence</op>
                     <op code="put">longestTimeSequence</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">skipNumColumns</op>
                     <op code="call">
                        <name>org.datavec.api.writable.Text.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">iter</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">totalExamples</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/DataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/DataSet</return>
                  <ops>
                     <op code="get">shortest</op>
                     <op code="get">longestTimeSequence</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[IC">?</arg>
                        </args>
                     </op>
                     <op code="get">longestTimeSequence</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.writable.Writable.toDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="[ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">longestTimeSequence</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">longestTimeSequence</op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JJD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">iter</op>
                     <op code="get">iter</op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/List;"
                       name="getLabels"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/List</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.sequenceanomalydetection.AnomalyDataSetReader.doInitialize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalExamples"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">totalExamples</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/Queue;"
                       name="currentLines"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/util/Queue</return>
                  <ops>
                     <op code="get">currentLines</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools">
         <class id="LabelSeeker"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.LabelSeeker; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.LabelSeeker-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">labelsUsed</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">lookupTable</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/util/List;Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="put">lookupTable</op>
                     <op code="put">labelsUsed</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Ljava/util/List;"
                       name="getScores"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">labelsUsed</op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">lookupTable</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.vector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.IllegalStateException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.cosineSim</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="MeansBuilder"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.MeansBuilder; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.paragraphvectors.tools.MeansBuilder-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">vocabCache</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">lookupTable</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">tokenizerFactory</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable;Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory;)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/models/embeddings/inmemory/InMemoryLookupTable">?</arg>
                     <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">lookupTable</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.getVocab</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">vocabCache</op>
                     <op code="put">tokenizerFactory</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/deeplearning4j/text/documentiterator/LabelledDocument;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="documentAsVector"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/deeplearning4j/text/documentiterator/LabelledDocument">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="get">tokenizerFactory</op>
                     <op code="call">
                        <name>org.deeplearning4j.text.documentiterator.LabelledDocument.getContent</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.create</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.Tokenizer.getTokens</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.atomic.AtomicInteger.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">vocabCache</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.containsWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.atomic.AtomicInteger.incrementAndGet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.atomic.AtomicInteger.get</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">lookupTable</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.layerSize</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.atomic.AtomicInteger.set</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">vocabCache</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabCache.containsWord</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.concurrent.atomic.AtomicInteger.getAndIncrement</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">lookupTable</op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable.vector</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putRow</name>
                        <args>
                           <arg type="JLorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.mean</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer">
         <class id="EditLastLayerOthersFrozen"><!--Package: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer; name: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen; file: org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true" public="false" static="true" type="I">numClasses</attribute>
               <attribute final="true" public="false" static="true" type="J">seed</attribute>
               <attribute final="true" public="false" static="true" type="I">trainPerc</attribute>
               <attribute final="true" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">featureExtractionLayer</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.VGG16$VGG16Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.ZooModel.initPretrained</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.fineTuneConfiguration</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/transferlearning/FineTuneConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setFeatureExtractor</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.removeVertexKeepConnections</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.distribution.NormalDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/distribution/Distribution">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.setup</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.trainIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.transferlearning.iterators.FlowerDataSetIterator.testIterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.features.transferlearning.editlastlayer.EditLastLayerOthersFrozen.log</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.customizingdl4j.layers">
         <class id="CustomLayerUsageEx"><!--Package: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers; name: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.CustomLayerUsageEx; file: org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.CustomLayerUsageEx-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.CustomLayerUsageEx.runInitialTests</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.CustomLayerUsageEx.doGradientCheck</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="runInitialTests"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.secondActivationFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.getConf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BaseLayer.getRegularization</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.regularization.L2Regularization.getL2</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.schedule.ISchedule.valueAt</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.getConf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration.getLayer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BaseLayer.getIUpdater</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.toJson</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.toYaml</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.fromJson</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.fromYaml</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.rand</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JJD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForward</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayerWiseConfigurations</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayerWiseConfigurations</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Object.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="doGradientCheck"
                       static="true"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getRandom</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.rng.Random.setSeed</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.dataType</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.NoOp.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.distribution.NormalDistribution.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/distribution/Distribution">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SIGMOID</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.secondActivationFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.features.customizingdl4j.layers.layer.CustomLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="ILorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.rand</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.putScalar</name>
                        <args>
                           <arg type="JJD">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayer</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.net</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.epsilon</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.maxRelError</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.minAbsoluteError</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.gradientcheck.GradientCheckUtil$PrintMode.FAILURES_ONLY</op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.print</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/gradientcheck/GradientCheckUtil$PrintMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.exitOnFirstError</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.input</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil$MLNConfig.labels</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.gradientcheck.GradientCheckUtil.checkGradients</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/gradientcheck/GradientCheckUtil$MLNConfig">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="get_static">org.nd4j.linalg.api.buffer.DataType.DOUBLE</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.setDefaultDataTypes</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/buffer/DataType">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.earlystopping">
         <class id="EarlyStoppingMNIST"><!--Package: org.deeplearning4j.examples.quickstart.features.earlystopping; name: org.deeplearning4j.examples.quickstart.features.earlystopping.EarlyStoppingMNIST; file: org.deeplearning4j.examples.quickstart.features.earlystopping.EarlyStoppingMNIST-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.dropOut</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IIZZZJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IIZZZJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.mkdir</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.saver.LocalFileModelSaver.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.termination.MaxEpochsTerminationCondition.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.termination.ScoreImprovementEpochTerminationCondition.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.epochTerminationConditions</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/earlystopping/termination/EpochTerminationCondition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.evaluateEveryNEpochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.util.concurrent.TimeUnit.MINUTES</op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.termination.MaxTimeIterationTerminationCondition.&lt;init&gt;</name>
                        <args>
                           <arg type="JLjava/util/concurrent/TimeUnit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.iterationTerminationConditions</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/earlystopping/termination/IterationTerminationCondition">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.scorecalc.DataSetLossCalculator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.scoreCalculator</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/earlystopping/scorecalc/ScoreCalculator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.modelSaver</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/earlystopping/EarlyStoppingModelSaver">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.trainer.EarlyStoppingTrainer.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/earlystopping/EarlyStoppingConfiguration">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.trainer.EarlyStoppingTrainer.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getTerminationReason</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getTerminationDetails</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getTotalEpochs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getBestModelEpoch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getBestModelScore</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.earlystopping.EarlyStoppingResult.getScoreVsEpoch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.keySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.sort</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.modelsavingloading">
         <class id="SaveLoadMultiLayerNetwork"><!--Package: org.deeplearning4j.examples.quickstart.features.modelsavingloading; name: org.deeplearning4j.examples.quickstart.features.modelsavingloading.SaveLoadMultiLayerNetwork; file: org.deeplearning4j.examples.quickstart.features.modelsavingloading.SaveLoadMultiLayerNetwork-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Object.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayerWiseConfigurations</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.getLayerWiseConfigurations</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.MultiLayerConfiguration.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="SaveLoadComputationGraph"><!--Package: org.deeplearning4j.examples.quickstart.features.modelsavingloading; name: org.deeplearning4j.examples.quickstart.features.modelsavingloading.SaveLoadComputationGraph; file: org.deeplearning4j.examples.quickstart.features.modelsavingloading.SaveLoadComputationGraph-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.params</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Object.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getConfiguration</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getConfiguration</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.objectdetection">
         <class id="TinyYoloHouseNumberDetection"><!--Package: org.deeplearning4j.examples.advanced.modelling.objectdetection; name: org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection; file: org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">RED</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">GREEN</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">BLUE</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">YELLOW</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">CYAN</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">MAGENTA</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">ORANGE</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">PINK</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">LIGHTBLUE</attribute>
               <attribute final="true"
                          public="true"
                          static="true"
                          type="Lorg/bytedeco/opencv/opencv_core/Scalar">VIOLET</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.fetchers.SvhnDataFetcher.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.datasets.fetchers.DataSetType.TRAIN</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.fetchers.SvhnDataFetcher.getDataSetPath</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/datasets/fetchers/DataSetType">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.datasets.fetchers.DataSetType.TEST</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.fetchers.SvhnDataFetcher.getDataSetPath</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/datasets/fetchers/DataSetType">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.datavec.image.loader.NativeImageLoader.ALLOWED_FORMATS</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.datavec.image.loader.NativeImageLoader.ALLOWED_FORMATS</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.impl.SvhnLabelProvider.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.ObjectDetectionRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="IIIIILorg/datavec/image/recordreader/objdetect/ImageObjectLabelProvider">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.ObjectDetectionRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.impl.SvhnLabelProvider.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.ObjectDetectionRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="IIIIILorg/datavec/image/recordreader/objdetect/ImageObjectLabelProvider">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.objdetect.ObjectDetectionRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="IIIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="IIIZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler.&lt;init&gt;</name>
                        <args>
                           <arg type="DD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.TinyYOLO.builder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.TinyYOLO$TinyYOLOBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.zoo.model.TinyYOLO.initPretrained</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.seed</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.RenormalizeL2PerLayer</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.gradientNormalizationThreshold</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam$Builder.learningRate</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.trainingWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.WorkspaceMode.ENABLED</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.inferenceWorkspaceMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/WorkspaceMode">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.FineTuneConfiguration$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/graph/ComputationGraph">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.fineTuneConfiguration</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/transferlearning/FineTuneConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.removeVertexKeepConnections</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.removeVertexKeepConnections</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.ConvolutionMode.Same</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.convolutionMode</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ConvolutionMode">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.objdetect.Yolo2OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.objdetect.Yolo2OutputLayer$Builder.lambdaNoObj</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.objdetect.Yolo2OutputLayer$Builder.lambdaCoord</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.objdetect.Yolo2OutputLayer$Builder.boundingBoxPriors</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.objdetect.Yolo2OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.transferlearning.TransferLearning$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.summary</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.OpenCVFrameConverter$ToMat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getOutputLayer</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.setCollectMetaData</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.RED</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.BLUE</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.GREEN</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.CYAN</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.YELLOW</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.MAGENTA</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.ORANGE</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.PINK</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.LIGHTBLUE</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.VIOLET</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.isVisible</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getExampleMetaData</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.outputSingle</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.Yolo2OutputLayer.getPredictedObjects</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaDataImageURI.getURI</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/net/URI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.loader.NativeImageLoader.asMat</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.convertTo</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="IDD">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaDataImageURI.getOrigW</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaDataImageURI.getOrigH</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Size.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_imgproc.resize</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Size">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.DetectedObject.getTopLeftXY</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.DetectedObject.getBottomRightXY</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.DetectedObject.getPredictedClass</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.round</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.round</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.round</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.round</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Point.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Point.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.DetectedObject.getPredictedClass</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_imgproc.rectangle</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Point">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Point">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Scalar">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Point.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.objdetect.DetectedObject.getPredictedClass</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_imgproc.putText</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Point">?</arg>
                           <arg type="IDLorg/bytedeco/opencv/opencv_core/Scalar">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaDataImageURI.getURI</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/net/URI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.getName</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.setTitle</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.setCanvasSize</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.OpenCVFrameConverter$ToMat.convert</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.showImage</name>
                        <args>
                           <arg type="Lorg/bytedeco/javacv/Frame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.waitKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.CanvasFrame.dispose</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.log</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.RED</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.GREEN</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.BLUE</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.YELLOW</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.CYAN</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.MAGENTA</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.ORANGE</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.PINK</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.LIGHTBLUE</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_core.RGB</name>
                        <args>
                           <arg type="DDD">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.objectdetection.TinyYoloHouseNumberDetection.VIOLET</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils">
         <class id="NoiseTransform"><!--Package: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils; name: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.NoiseTransform; file: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.NoiseTransform-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">numPix</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.NoiseTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/util/Random;I)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.image.transform.BaseImageTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="put">numPix</op>
                     <op code="call">
                        <name>org.bytedeco.javacv.OpenCVFrameConverter$ToMat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">converter</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/datavec/image/data/ImageWritable;Ljava/util/Random;)Lorg/datavec/image/data/ImageWritable;"
                       name="doTransform"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Lorg/datavec/image/data/ImageWritable">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>Lorg/datavec/image/data/ImageWritable</return>
                  <ops>
                     <op code="get">converter</op>
                     <op code="call">
                        <name>org.datavec.image.data.ImageWritable.getFrame</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.FrameConverter.convert</name>
                        <args>
                           <arg type="Lorg/bytedeco/javacv/Frame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.channels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.createIndexer</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">numPix</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.rows</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.cols</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacpp.indexer.UByteIndexer.put</name>
                        <args>
                           <arg type="JJJI">?</arg>
                        </args>
                     </op>
                     <op code="get">converter</op>
                     <op code="call">
                        <name>org.bytedeco.javacv.FrameConverter.convert</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.data.ImageWritable.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/bytedeco/javacv/Frame">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([F)[F"
                       name="query"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="F">?</arg>
                  </args>
                  <return>F</return>
               </method>
            </methods>
         </class>
         <class id="BlurTransform"><!--Package: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils; name: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.BlurTransform; file: org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.BlurTransform-->
            <attributes>
               <attribute final="false" public="false" static="false" type="I">kSize</attribute>
               <attribute final="false" public="false" static="false" type="D">deviation</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(ID)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.advanced.modelling.densenet.imageUtils.BlurTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                           <arg type="ID">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.OpenCVFrameConverter$ToMat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">converter</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/util/Random;ID)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Ljava/util/Random">?</arg>
                     <arg type="I">?</arg>
                     <arg type="D">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.image.transform.BaseImageTransform.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="put">kSize</op>
                     <op code="put">deviation</op>
                     <op code="call">
                        <name>org.bytedeco.javacv.OpenCVFrameConverter$ToMat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">converter</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/datavec/image/data/ImageWritable;Ljava/util/Random;)Lorg/datavec/image/data/ImageWritable;"
                       name="doTransform"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Lorg/datavec/image/data/ImageWritable">?</arg>
                     <arg type="Ljava/util/Random">?</arg>
                  </args>
                  <return>Lorg/datavec/image/data/ImageWritable</return>
                  <ops>
                     <op code="get">converter</op>
                     <op code="call">
                        <name>org.datavec.image.data.ImageWritable.getFrame</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.javacv.FrameConverter.convert</name>
                        <args>
                           <arg type="Lorg/bytedeco/javacv/Frame">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Mat.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">kSize</op>
                     <op code="get">kSize</op>
                     <op code="get">kSize</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.opencv_core.Size.&lt;init&gt;</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">deviation</op>
                     <op code="get">deviation</op>
                     <op code="call">
                        <name>org.bytedeco.opencv.global.opencv_imgproc.GaussianBlur</name>
                        <args>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Mat">?</arg>
                           <arg type="Lorg/bytedeco/opencv/opencv_core/Size">?</arg>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.RuntimeException.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get">converter</op>
                     <op code="call">
                        <name>org.bytedeco.javacv.FrameConverter.convert</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.data.ImageWritable.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/bytedeco/javacv/Frame">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([F)[F"
                       name="query"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="F">?</arg>
                  </args>
                  <return>F</return>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.features.classimbalance">
         <class id="WeightedLossFunctionExample"><!--Package: org.deeplearning4j.examples.quickstart.features.classimbalance; name: org.deeplearning4j.examples.quickstart.features.classimbalance.WeightedLossFunctionExample; file: org.deeplearning4j.examples.quickstart.features.classimbalance.WeightedLossFunctionExample-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.lossfunctions.impl.LossMCXENT.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/ILossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors">
         <class id="SequenceVectorsTextExample"><!--Package: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors; name: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample; file: org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">logger</attribute>
               <attribute final="false"
                          public="true"
                          static="true"
                          type="Ljava/lang/String">dataLocalPath</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.NLPDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample.dataLocalPath</op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample.dataLocalPath</op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.inmemory.AbstractCache$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.inmemory.AbstractCache$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.sentenceiterator.BasicLineIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizer.preprocessor.CommonPreprocessor.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.text.tokenization.tokenizerfactory.TokenizerFactory.setTokenPreProcessor</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizer/TokenPreProcess">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.transformers.impl.SentenceTransformer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.transformers.impl.SentenceTransformer$Builder.iterator</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/sentenceiterator/SentenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.transformers.impl.SentenceTransformer$Builder.tokenizerFactory</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/text/tokenization/tokenizerfactory/TokenizerFactory">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.transformers.impl.SentenceTransformer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.iterators.AbstractSequenceIterator$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Iterable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.iterators.AbstractSequenceIterator$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabConstructor$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabConstructor$Builder.addSource</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/sequencevectors/interfaces/SequenceIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabConstructor$Builder.setTargetVocabCache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabConstructor$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.word2vec.wordstore.VocabConstructor.buildJointVocabulary</name>
                        <args>
                           <arg type="ZZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.vectorLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.useAdaGrad</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.cache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.inmemory.InMemoryLookupTable$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.WeightLookupTable.resetWeights</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.loader.VectorsConfiguration.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/loader/VectorsConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.minWordFrequency</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.lookupTable</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/WeightLookupTable">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.iterate</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/sequencevectors/interfaces/SequenceIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.vocabCache</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/word2vec/wordstore/VocabCache">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.batchSize</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.iterations</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.epochs</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.resetModel</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.trainElementsRepresentation</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.trainSequencesRepresentation</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.embeddings.learning.impl.elements.SkipGram.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.elementsLearningAlgorithm</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/models/embeddings/learning/ElementsLearningAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors.fit</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.models.sequencevectors.SequenceVectors.similarity</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample.logger</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.advanced.modelling.embeddingsfromcorpus.sequencevectors.SequenceVectorsTextExample.logger</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder">
         <class id="CorpusProcessor"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder; name: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor; file: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">SPECIALS</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Set">dictSet</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Map">freq</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/Map">dict</attribute>
               <attribute final="false" public="false" static="false" type="Z">countFreq</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/io/InputStream">is</attribute>
               <attribute final="false" public="false" static="false" type="I">rowSize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/lang/String;IZ)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.io.FileInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/io/InputStream;IZ)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/io/InputStream">?</arg>
                     <arg type="I">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashSet.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">dictSet</op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">freq</op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">dict</op>
                     <op code="put">is</op>
                     <op code="put">rowSize</op>
                     <op code="put">countFreq</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="start"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">is</op>
                     <op code="get_static">java.nio.charset.StandardCharsets.UTF_8</op>
                     <op code="call">
                        <name>java.io.InputStreamReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/Reader">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.readLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toLowerCase</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.substring</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.contains</name>
                        <args>
                           <arg type="Ljava/lang/CharSequence">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.processLine</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.processLine</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.BufferedReader.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)V"
                       name="processLine"
                       static="false"
                       visibility="protected">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">dictSet</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.tokenizeLine</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;Ljava/util/Collection;Z)V"
                       name="tokenizeLine"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                     <arg type="Ljava/util/Collection">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.String.split</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.length</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.indexOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.addWord</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.charAt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.addWord</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.substring</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.isEmpty</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.addWord</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Collection;Ljava/lang/String;)V"
                       name="addWord"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Collection">?</arg>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Collection.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">countFreq</op>
                     <op code="get">freq</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">freq</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">freq</op>
                     <op code="call">
                        <name>java.lang.Double.doubleValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/util/Map;"
                       name="getFreq"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>Ljava/util/Map</return>
                  <ops>
                     <op code="get">freq</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Map;)V"
                       name="setDict"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/util/Map">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">dict</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/Iterable;)Ljava/util/List;"
                       name="wordsToIndexes"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/lang/Iterable">?</arg>
                  </args>
                  <return>Ljava/util/List</return>
                  <ops>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>java.util.LinkedList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Iterable.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CorpusIterator"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder; name: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator; file: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator-->
            <attributes>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Ljava/util/List">corpus</attribute>
               <attribute final="false" public="false" static="false" type="I">batchSize</attribute>
               <attribute final="false" public="false" static="false" type="I">batchesPerMacrobatch</attribute>
               <attribute final="false" public="false" static="false" type="I">totalBatches</attribute>
               <attribute final="false" public="false" static="false" type="I">totalMacroBatches</attribute>
               <attribute final="false" public="false" static="false" type="I">currentBatch</attribute>
               <attribute final="false" public="false" static="false" type="I">currentMacroBatch</attribute>
               <attribute final="false" public="false" static="false" type="I">dictSize</attribute>
               <attribute final="false" public="false" static="false" type="I">rowSize</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="(Ljava/util/List;IIII)V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">currentBatch</op>
                     <op code="put">currentMacroBatch</op>
                     <op code="put">corpus</op>
                     <op code="put">batchSize</op>
                     <op code="put">batchesPerMacrobatch</op>
                     <op code="put">dictSize</op>
                     <op code="put">rowSize</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.ceil</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="put">totalBatches</op>
                     <op code="get">totalBatches</op>
                     <op code="call">
                        <name>java.lang.Math.ceil</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="put">totalMacroBatches</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNext"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="get">currentBatch</op>
                     <op code="get">totalBatches</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.getMacroBatchByCurrentBatch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">currentMacroBatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="getMacroBatchByCurrentBatch"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">currentBatch</op>
                     <op code="get">batchesPerMacrobatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSet</return>
                  <ops>
                     <op code="get">batchSize</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.next</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)Lorg/nd4j/linalg/dataset/api/MultiDataSet;"
                       name="next"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSet</return>
                  <ops>
                     <op code="get">currentBatch</op>
                     <op code="get">batchSize</op>
                     <op code="get">batchSize</op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.min</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">rowSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.zeros</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.reverse</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.toArray</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.ArrayUtils.toPrimitive</name>
                        <args>
                           <arg type="[Ljava/lang/Double">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.ones</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.intValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.point</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get">dictSize</op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.indexing.NDArrayIndex.interval</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[[D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.put</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/indexing/INDArrayIndex">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get">currentBatch</op>
                     <op code="put">currentBatch</op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.MultiDataSet.&lt;init&gt;</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;"
                       name="getPreProcessor"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="resetSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="asyncSupported"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Z</return>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="reset"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="put">currentBatch</op>
                     <op code="put">currentMacroBatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="batch"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">currentBatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()I"
                       name="totalBatches"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>I</return>
                  <ops>
                     <op code="get">totalBatches</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(I)V"
                       name="setCurrentBatch"
                       static="false"
                       visibility="default">
                  <args>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="put">currentBatch</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.getMacroBatchByCurrentBatch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">currentMacroBatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Z"
                       name="hasNextMacrobatch"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>Z</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.getMacroBatchByCurrentBatch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">totalMacroBatches</op>
                     <op code="get">currentMacroBatch</op>
                     <op code="get">totalMacroBatches</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="nextMacroBatch"
                       static="false"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">currentMacroBatch</op>
                     <op code="put">currentMacroBatch</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor;)V"
                       name="setPreProcessor"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/dataset/api/MultiDataSetPreProcessor">?</arg>
                  </args>
                  <return>V</return>
               </method>
            </methods>
         </class>
         <class id="EncoderDecoderLSTM"><!--Package: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder; name: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM; file: org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/Map">dict</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/Map">revDict</attribute>
               <attribute final="true"
                          public="false"
                          static="false"
                          type="Ljava/util/List">corpus</attribute>
               <attribute final="true" public="false" static="true" type="I">HIDDEN_LAYER_WIDTH</attribute>
               <attribute final="true" public="false" static="true" type="I">EMBEDDING_WIDTH</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">CORPUS_FILENAME</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">MODEL_FILENAME</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">BACKUP_MODEL_FILENAME</attribute>
               <attribute final="true" public="false" static="true" type="I">MINIBATCH_SIZE</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/util/Random">rnd</attribute>
               <attribute final="true" public="false" static="true" type="J">SAVE_EACH_MS</attribute>
               <attribute final="true" public="false" static="true" type="J">TEST_EACH_MS</attribute>
               <attribute final="true" public="false" static="true" type="I">MAX_DICT</attribute>
               <attribute final="true" public="false" static="true" type="I">TBPTT_SIZE</attribute>
               <attribute final="true" public="false" static="true" type="D">LEARNING_RATE</attribute>
               <attribute final="true" public="false" static="true" type="I">ROW_SIZE</attribute>
               <attribute final="true" public="false" static="true" type="I">GC_WINDOW</attribute>
               <attribute final="true" public="false" static="true" type="I">MACROBATCH_SIZE</attribute>
               <attribute final="false"
                          public="false"
                          static="false"
                          type="Lorg/deeplearning4j/nn/graph/ComputationGraph">net</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">dict</op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">revDict</op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put">corpus</op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.run</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="run"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.getMemoryManager</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.memory.MemoryManager.setAutoGcWindow</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.createDictionary</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.toTempPath</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.load</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="put">net</op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.in</op>
                     <op code="call">
                        <name>java.util.Scanner.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/InputStream">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Scanner.nextLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toLowerCase</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.equals</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.startDialog</name>
                        <args>
                           <arg type="Ljava/util/Scanner">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.parseInt</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.test</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Scanner.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Scanner.close</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Throwable.addSuppressed</name>
                        <args>
                           <arg type="Ljava/lang/Throwable">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.createComputationGraph</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.train</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="createComputationGraph"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.RmsProp.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.GradientNormalization.RenormalizeL2PerLayer</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.gradientNormalization</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/GradientNormalization">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.graphBuilder</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.BackpropType.Standard</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.backpropType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/BackpropType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.tBPTTBackwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.tBPTTForwardLength</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addInputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.recurrent</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.recurrent</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setInputTypes</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.EmbeddingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.rnn.LastTimeStepVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.rnn.DuplicateToTimeSeriesVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.graph.MergeVertex.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/graph/GraphVertex">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.LSTM$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.MCXENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.lossFunction</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.RnnOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.addLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.setOutputs</name>
                        <args>
                           <arg type="[Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.ComputationGraphConfiguration$GraphBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/ComputationGraphConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="put">net</op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;I)V"
                       name="train"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                     <arg type="I">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">corpus</op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="IIII">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.setCurrentBatch</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.hasNextMacrobatch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/MultiDataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.nextMacroBatch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.batch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.batch</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusIterator.totalBatches</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.SAVE_EACH_MS</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.saveModel</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.TEST_EACH_MS</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.test</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.currentTimeMillis</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/Scanner;)V"
                       name="startDialog"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/Scanner">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Scanner.nextLine</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.nio.charset.StandardCharsets.UTF_8</op>
                     <op code="call">
                        <name>java.lang.String.getBytes</name>
                        <args>
                           <arg type="Ljava/nio/charset/Charset">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.ByteArrayInputStream.&lt;init&gt;</name>
                        <args>
                           <arg type="[B">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM$1.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/encoderdecoder/EncoderDecoderLSTM">?</arg>
                           <arg type="Ljava/io/InputStream">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.setDict</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/io/File;)V"
                       name="saveModel"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/io/File">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.toTempPath</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.delete</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.renameTo</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="test"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.rnd</op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.nextInt</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.output</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/util/List;Z)V"
                       name="output"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/util/List">?</arg>
                     <arg type="Z">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.rnnClearPreviousState</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Collections.reverse</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.toArray</name>
                        <args>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.lang3.ArrayUtils.toPrimitive</name>
                        <args>
                           <arg type="[Ljava/lang/Double">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.feedForward</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZZ">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getLayer</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">net</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.ComputationGraph.getVertex</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.vertex.GraphVertex.getInputs</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.noWorkspaces</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.vertex.GraphVertex.setInputs</name>
                        <args>
                           <arg type="[Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.graph.vertex.GraphVertex.doForward</name>
                        <args>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.layers.recurrent.LSTM.rnnTimeStep</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.api.Layer.activate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="ZLorg/deeplearning4j/nn/workspace/LayerWorkspaceMgr">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.rnd</op>
                     <op code="call">
                        <name>java.util.Random.nextDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.size</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getDouble</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.get</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.print</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()V"
                       name="createDictionary"
                       static="false"
                       visibility="private">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.toCharArray</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.containsKey</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.valueOf</name>
                        <args>
                           <arg type="C">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.toTempPath</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.getFreq</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM$2.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/encoderdecoder/EncoderDecoderLSTM">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeMap.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Comparator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.computeIfAbsent</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/util/function/Function">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getKey</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.keySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.TreeSet.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/util/Collection">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.entrySet</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map$Entry.getValue</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Set.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.containsKey</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get">revDict</op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>java.util.Map.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.toTempPath</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM$3.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/examples/wip/advanced/modelling/encoderdecoder/EncoderDecoderLSTM">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="IZ">?</arg>
                        </args>
                     </op>
                     <op code="get">dict</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.setDict</name>
                        <args>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.CorpusProcessor.start</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get">corpus</op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Ljava/lang/String;)Ljava/lang/String;"
                       name="toTempPath"
                       static="false"
                       visibility="private">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>Ljava/lang/String</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Date.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Date.getTime</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.rnd</op>
                     <op code="get_static">java.util.concurrent.TimeUnit.MINUTES</op>
                     <op code="call">
                        <name>java.util.concurrent.TimeUnit.toMillis</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.SAVE_EACH_MS</op>
                     <op code="get_static">java.util.concurrent.TimeUnit.MINUTES</op>
                     <op code="call">
                        <name>java.util.concurrent.TimeUnit.toMillis</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.wip.advanced.modelling.encoderdecoder.EncoderDecoderLSTM.TEST_EACH_MS</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.convolution">
         <class id="LeNetMNISTReLu"><!--Package: org.deeplearning4j.examples.quickstart.modeling.convolution; name: org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu; file: org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">LOGGER</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">BASE_PATH</attribute>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Ljava/lang/String">DATA_URL</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.util.Random.&lt;init&gt;</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.exists</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.slf4j.Logger.debug</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DataUtilities.downloadFile</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DataUtilities.extractTarGz</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.datavec.image.loader.NativeImageLoader.ALLOWED_FORMATS</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.io.labels.ParentPathLabelGenerator.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.ImagePreProcessingScaler.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.datavec.image.loader.NativeImageLoader.ALLOWED_FORMATS</op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="[Ljava/lang/String">?</arg>
                           <arg type="Ljava/util/Random">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="JJJLorg/datavec/api/io/labels/PathLabelGenerator">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.image.recordreader.ImageRecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.setPreProcessor</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSetPreProcessor">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.HashMap.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Double.valueOf</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Map.put</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.schedule.ScheduleType.ITERATION</op>
                     <op code="call">
                        <name>org.nd4j.linalg.schedule.MapSchedule.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/schedule/ScheduleType">?</arg>
                           <arg type="Ljava/util/Map">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Nesterovs.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/schedule/ISchedule">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.numParams</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Long.valueOf</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.evaluate</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.reset</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.util.ModelSerializer.writeModel</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/Model">?</arg>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>java.io.File.getPath</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.LOGGER</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNISTReLu.BASE_PATH</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="LeNetMNIST"><!--Package: org.deeplearning4j.examples.quickstart.modeling.convolution; name: org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST; file: org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.apache.commons.io.FilenameUtils.concat</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.LeNetMNIST.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CenterLossLeNetMNIST"><!--Package: org.deeplearning4j.examples.quickstart.modeling.convolution; name: org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST; file: org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.MnistDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="IZI">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.RELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Adam.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.IDENTITY</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.alpha</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.lambda</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.CenterLossOutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutionalFlat</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.iterator.DataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST.log</op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.feedForwardToLayer</name>
                        <args>
                           <arg type="ILorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.common.primitives.Pair.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Integer.valueOf</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.VAEPlotUtil.scatterPlot</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CenterLossLeNetMNIST.log</op>
                  </ops>
               </method>
            </methods>
         </class>
         <class id="CIFARClassifier"><!--Package: org.deeplearning4j.examples.quickstart.modeling.convolution; name: org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier; file: org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier-->
            <attributes>
               <attribute final="true"
                          public="false"
                          static="true"
                          type="Lorg/slf4j/Logger">log</attribute>
               <attribute final="false" public="false" static="true" type="I">height</attribute>
               <attribute final="false" public="false" static="true" type="I">width</attribute>
               <attribute final="false" public="false" static="true" type="I">channels</attribute>
               <attribute final="false" public="false" static="true" type="I">numLabels</attribute>
               <attribute final="false" public="false" static="true" type="I">batchSize</attribute>
               <attribute final="false" public="false" static="true" type="J">seed</attribute>
               <attribute final="false" public="false" static="true" type="I">epochs</attribute>
            </attributes>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.batchSize</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.height</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.width</op>
                     <op code="get_static">org.deeplearning4j.datasets.fetchers.DataSetType.TRAIN</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.seed</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.Cifar10DataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="I[ILorg/deeplearning4j/datasets/fetchers/DataSetType">?</arg>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.batchSize</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.height</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.width</op>
                     <op code="get_static">org.deeplearning4j.datasets.fetchers.DataSetType.TEST</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.seed</op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.iterator.impl.Cifar10DataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="I[ILorg/deeplearning4j/datasets/fetchers/DataSetType">?</arg>
                           <arg type="Lorg/datavec/image/transform/ImageTransform">?</arg>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.getModel</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.getInstance</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.storage.FileStatsStorage.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.api.UIServer.attach</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorage">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.ui.model.stats.StatsListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/core/storage/StatsStorageRouter">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.optimize.api.InvocationType.EPOCH_END</op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.EvaluativeListener.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="ILorg/deeplearning4j/optimize/api/InvocationType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.epochs</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/iterator/DataSetIterator">?</arg>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.getProperty</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.save</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.System.exit</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork;"
                       name="getModel"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Lorg/deeplearning4j/nn/multilayer/MultiLayerNetwork</return>
                  <ops>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.log</op>
                     <op code="call">
                        <name>org.slf4j.Logger.info</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.seed</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.AdaDelta.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.api.OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.optimizationAlgo</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/api/OptimizationAlgorithm">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.channels</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.poolingType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.MAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.poolingType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.padding</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.LEAKYRELU</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.numLabels</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.ConvolutionLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.BatchNormalization.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.kernelSize</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.stride</name>
                        <args>
                           <arg type="[I">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.conf.layers.SubsamplingLayer$PoolingType.AVG</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.poolingType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/SubsamplingLayer$PoolingType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.SubsamplingLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.name</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.numLabels</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.dropOut</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.height</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.width</op>
                     <op code="get_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.channels</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.inputs.InputType.convolutional</name>
                        <args>
                           <arg type="JJJ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.setInputType</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/inputs/InputType">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;clinit&gt;"
                       static="true"
                       visibility="default">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.slf4j.LoggerFactory.getLogger</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.log</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.height</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.width</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.channels</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.numLabels</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.batchSize</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.seed</op>
                     <op code="put_static">org.deeplearning4j.examples.quickstart.modeling.convolution.CIFARClassifier.epochs</op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions">
         <class id="SawtoothMathFunction"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SawtoothMathFunction; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SawtoothMathFunction-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getFunctionValues"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.floor</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getName"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
            </methods>
         </class>
         <class id="SinMathFunction"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SinMathFunction; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SinMathFunction-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getFunctionValues"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.sin</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getName"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
            </methods>
         </class>
         <class id="SinXDivXMathFunction"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SinXDivXMathFunction; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SinXDivXMathFunction-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getFunctionValues"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.sin</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.divi</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getName"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
            </methods>
         </class>
         <class id="SquareWaveMathFunction"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SquareWaveMathFunction; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.SquareWaveMathFunction-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getFunctionValues"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.sin</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.ops.transforms.Transforms.sign</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getName"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
            </methods>
         </class>
         <class id="TriangleWaveMathFunction"><!--Package: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions; name: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.TriangleWaveMathFunction; file: org.deeplearning4j.examples.quickstart.modeling.feedforward.regression.mathfunctions.TriangleWaveMathFunction-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="(Lorg/nd4j/linalg/api/ndarray/INDArray;)Lorg/nd4j/linalg/api/ndarray/INDArray;"
                       name="getFunctionValues"
                       static="false"
                       visibility="public">
                  <args>
                     <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                  </args>
                  <return>Lorg/nd4j/linalg/api/ndarray/INDArray</return>
                  <ops>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.data</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.buffer.DataBuffer.asDouble</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.floor</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.Math.abs</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.factory.Nd4j.create</name>
                        <args>
                           <arg type="[D[J">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="()Ljava/lang/String;"
                       name="getName"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>Ljava/lang/String</return>
               </method>
            </methods>
         </class>
      </package>
      <package id="org.deeplearning4j.examples.advanced.features.metadata">
         <class id="CSVExampleEvaluationMetaData"><!--Package: org.deeplearning4j.examples.advanced.features.metadata; name: org.deeplearning4j.examples.advanced.features.metadata.CSVExampleEvaluationMetaData; file: org.deeplearning4j.examples.advanced.features.metadata.CSVExampleEvaluationMetaData-->
            <attributes/>
            <methods>
               <method abstract="false"
                       bridge="false"
                       ctor="true"
                       desc="()V"
                       name="&lt;init&gt;"
                       static="false"
                       visibility="public">
                  <args/>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>java.lang.Object.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
               <method abstract="false"
                       bridge="false"
                       ctor="false"
                       desc="([Ljava/lang/String;)V"
                       name="main"
                       static="true"
                       visibility="public">
                  <args>
                     <arg type="Ljava/lang/String">?</arg>
                  </args>
                  <return>V</return>
                  <ops>
                     <op code="call">
                        <name>org.datavec.api.records.reader.impl.csv.CSVRecordReader.&lt;init&gt;</name>
                        <args>
                           <arg type="IC">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.examples.utils.DownloaderUtility.IRISDATA</op>
                     <op code="call">
                        <name>org.deeplearning4j.examples.utils.DownloaderUtility.Download</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.File.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.split.FileSplit.&lt;init&gt;</name>
                        <args>
                           <arg type="Ljava/io/File">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.initialize</name>
                        <args>
                           <arg type="Lorg/datavec/api/split/InputSplit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/datavec/api/records/reader/RecordReader">?</arg>
                           <arg type="III">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.setCollectMetaData</name>
                        <args>
                           <arg type="Z">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.shuffle</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.splitTestAndTrain</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTrain</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.SplitTestAndTrain.getTest</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getExampleMetaData</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getExampleMetaData</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaData.getLocation</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaData.getURI</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.String.format</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                           <arg type="[Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaData.getLocation</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.NormalizerStandardize.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.fit</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.seed</name>
                        <args>
                           <arg type="J">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.TANH</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.deeplearning4j.nn.weights.WeightInit.XAVIER</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.weightInit</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/weights/WeightInit">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.learning.config.Sgd.&lt;init&gt;</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.updater</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/learning/config/IUpdater">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.l2</name>
                        <args>
                           <arg type="D">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$Builder.list</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.DenseLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.lossfunctions.LossFunctions$LossFunction.NEGATIVELOGLIKELIHOOD</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/lossfunctions/LossFunctions$LossFunction">?</arg>
                        </args>
                     </op>
                     <op code="get_static">org.nd4j.linalg.activations.Activation.SOFTMAX</op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.activation</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/activations/Activation">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nIn</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.nOut</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.layers.OutputLayer$Builder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.layer</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/layers/Layer">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.conf.NeuralNetConfiguration$ListBuilder.build</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.&lt;init&gt;</name>
                        <args>
                           <arg type="Lorg/deeplearning4j/nn/conf/MultiLayerConfiguration">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.init</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.optimize.listeners.ScoreIterationListener.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.setListeners</name>
                        <args>
                           <arg type="[Lorg/deeplearning4j/optimize/api/TrainingListener">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.fit</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/dataset/api/DataSet">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.&lt;init&gt;</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.eval</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.stats</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.getPredictionErrors</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.meta.Prediction.getPredictedClass</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.meta.Prediction.getActualClass</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.meta.Prediction.getRecordMetaData</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaData.getLocation</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.ArrayList.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.iterator</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.hasNext</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.Iterator.next</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.meta.Prediction.getRecordMetaData</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.add</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.loadFromMetaData</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.api.preprocessor.DataNormalization.transform</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.reader.RecordReader.loadFromMetaData</name>
                        <args>
                           <arg type="Ljava/util/List">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.size</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.meta.Prediction.getRecordMetaData</name>
                        <args>
                           <arg type="Ljava/lang/Class">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getFeatures</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="JZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.dataset.DataSet.getLabels</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.linalg.api.ndarray.INDArray.getRow</name>
                        <args>
                           <arg type="JZ">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.util.List.get</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.Record.getRecord</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.deeplearning4j.nn.multilayer.MultiLayerNetwork.output</name>
                        <args>
                           <arg type="Lorg/nd4j/linalg/api/ndarray/INDArray">?</arg>
                        </args>
                     </op>
                     <op code="get_static">java.lang.System.out</op>
                     <op code="call">
                        <name>java.lang.StringBuilder.&lt;init&gt;</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.datavec.api.records.metadata.RecordMetaData.getLocation</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.append</name>
                        <args>
                           <arg type="Ljava/lang/Object">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.lang.StringBuilder.toString</name>
                        <args>
                           <arg type="">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>java.io.PrintStream.println</name>
                        <args>
                           <arg type="Ljava/lang/String">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.getPredictions</name>
                        <args>
                           <arg type="II">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.getPredictionByPredictedClass</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                     <op code="call">
                        <name>org.nd4j.evaluation.classification.Evaluation.getPredictionsByActualClass</name>
                        <args>
                           <arg type="I">?</arg>
                        </args>
                     </op>
                  </ops>
               </method>
            </methods>
         </class>
      </package>
   </app>
</skeleton>
